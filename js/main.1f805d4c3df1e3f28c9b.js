(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"/HNH":function(e,n){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute_0(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute_0(permute_0(ix) + iy);\n  vec4 ixy0 = permute_0(ixy + iz0);\n  vec4 ixy1 = permute_0(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\n// Permutation polynomial: (34x^2 + x) mod 289\nvec3 permute_1(vec3 x) {\n  return mod((34.0 * x + 1.0) * x, 289.0);\n}\n\nvec3 dist(vec3 x, vec3 y, vec3 z,  bool manhattanDistance) {\n  return manhattanDistance ?  abs(x) + abs(y) + abs(z) :  (x * x + y * y + z * z);\n}\n\nvec2 worley(vec3 P, float jitter, bool manhattanDistance) {\nfloat K = 0.142857142857; // 1/7\nfloat Ko = 0.428571428571; // 1/2-K/2\nfloat  K2 = 0.020408163265306; // 1/(7*7)\nfloat Kz = 0.166666666667; // 1/6\nfloat Kzo = 0.416666666667; // 1/2-1/6*2\n\n\tvec3 Pi = mod(floor(P), 289.0);\n \tvec3 Pf = fract(P) - 0.5;\n\n\tvec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\n\n\tvec3 p = permute_1(Pi.x + vec3(-1.0, 0.0, 1.0));\n\tvec3 p1 = permute_1(p + Pi.y - 1.0);\n\tvec3 p2 = permute_1(p + Pi.y);\n\tvec3 p3 = permute_1(p + Pi.y + 1.0);\n\n\tvec3 p11 = permute_1(p1 + Pi.z - 1.0);\n\tvec3 p12 = permute_1(p1 + Pi.z);\n\tvec3 p13 = permute_1(p1 + Pi.z + 1.0);\n\n\tvec3 p21 = permute_1(p2 + Pi.z - 1.0);\n\tvec3 p22 = permute_1(p2 + Pi.z);\n\tvec3 p23 = permute_1(p2 + Pi.z + 1.0);\n\n\tvec3 p31 = permute_1(p3 + Pi.z - 1.0);\n\tvec3 p32 = permute_1(p3 + Pi.z);\n\tvec3 p33 = permute_1(p3 + Pi.z + 1.0);\n\n\tvec3 ox11 = fract(p11*K) - Ko;\n\tvec3 oy11 = mod(floor(p11*K), 7.0)*K - Ko;\n\tvec3 oz11 = floor(p11*K2)*Kz - Kzo; // p11 < 289 guaranteed\n\n\tvec3 ox12 = fract(p12*K) - Ko;\n\tvec3 oy12 = mod(floor(p12*K), 7.0)*K - Ko;\n\tvec3 oz12 = floor(p12*K2)*Kz - Kzo;\n\n\tvec3 ox13 = fract(p13*K) - Ko;\n\tvec3 oy13 = mod(floor(p13*K), 7.0)*K - Ko;\n\tvec3 oz13 = floor(p13*K2)*Kz - Kzo;\n\n\tvec3 ox21 = fract(p21*K) - Ko;\n\tvec3 oy21 = mod(floor(p21*K), 7.0)*K - Ko;\n\tvec3 oz21 = floor(p21*K2)*Kz - Kzo;\n\n\tvec3 ox22 = fract(p22*K) - Ko;\n\tvec3 oy22 = mod(floor(p22*K), 7.0)*K - Ko;\n\tvec3 oz22 = floor(p22*K2)*Kz - Kzo;\n\n\tvec3 ox23 = fract(p23*K) - Ko;\n\tvec3 oy23 = mod(floor(p23*K), 7.0)*K - Ko;\n\tvec3 oz23 = floor(p23*K2)*Kz - Kzo;\n\n\tvec3 ox31 = fract(p31*K) - Ko;\n\tvec3 oy31 = mod(floor(p31*K), 7.0)*K - Ko;\n\tvec3 oz31 = floor(p31*K2)*Kz - Kzo;\n\n\tvec3 ox32 = fract(p32*K) - Ko;\n\tvec3 oy32 = mod(floor(p32*K), 7.0)*K - Ko;\n\tvec3 oz32 = floor(p32*K2)*Kz - Kzo;\n\n\tvec3 ox33 = fract(p33*K) - Ko;\n\tvec3 oy33 = mod(floor(p33*K), 7.0)*K - Ko;\n\tvec3 oz33 = floor(p33*K2)*Kz - Kzo;\n\n\tvec3 dx11 = Pfx + jitter*ox11;\n\tvec3 dy11 = Pfy.x + jitter*oy11;\n\tvec3 dz11 = Pfz.x + jitter*oz11;\n\n\tvec3 dx12 = Pfx + jitter*ox12;\n\tvec3 dy12 = Pfy.x + jitter*oy12;\n\tvec3 dz12 = Pfz.y + jitter*oz12;\n\n\tvec3 dx13 = Pfx + jitter*ox13;\n\tvec3 dy13 = Pfy.x + jitter*oy13;\n\tvec3 dz13 = Pfz.z + jitter*oz13;\n\n\tvec3 dx21 = Pfx + jitter*ox21;\n\tvec3 dy21 = Pfy.y + jitter*oy21;\n\tvec3 dz21 = Pfz.x + jitter*oz21;\n\n\tvec3 dx22 = Pfx + jitter*ox22;\n\tvec3 dy22 = Pfy.y + jitter*oy22;\n\tvec3 dz22 = Pfz.y + jitter*oz22;\n\n\tvec3 dx23 = Pfx + jitter*ox23;\n\tvec3 dy23 = Pfy.y + jitter*oy23;\n\tvec3 dz23 = Pfz.z + jitter*oz23;\n\n\tvec3 dx31 = Pfx + jitter*ox31;\n\tvec3 dy31 = Pfy.z + jitter*oy31;\n\tvec3 dz31 = Pfz.x + jitter*oz31;\n\n\tvec3 dx32 = Pfx + jitter*ox32;\n\tvec3 dy32 = Pfy.z + jitter*oy32;\n\tvec3 dz32 = Pfz.y + jitter*oz32;\n\n\tvec3 dx33 = Pfx + jitter*ox33;\n\tvec3 dy33 = Pfy.z + jitter*oy33;\n\tvec3 dz33 = Pfz.z + jitter*oz33;\n\n\tvec3 d11 = dist(dx11, dy11, dz11, manhattanDistance);\n\tvec3 d12 =dist(dx12, dy12, dz12, manhattanDistance);\n\tvec3 d13 = dist(dx13, dy13, dz13, manhattanDistance);\n\tvec3 d21 = dist(dx21, dy21, dz21, manhattanDistance);\n\tvec3 d22 = dist(dx22, dy22, dz22, manhattanDistance);\n\tvec3 d23 = dist(dx23, dy23, dz23, manhattanDistance);\n\tvec3 d31 = dist(dx31, dy31, dz31, manhattanDistance);\n\tvec3 d32 = dist(dx32, dy32, dz32, manhattanDistance);\n\tvec3 d33 = dist(dx33, dy33, dz33, manhattanDistance);\n\n\tvec3 d1a = min(d11, d12);\n\td12 = max(d11, d12);\n\td11 = min(d1a, d13); // Smallest now not in d12 or d13\n\td13 = max(d1a, d13);\n\td12 = min(d12, d13); // 2nd smallest now not in d13\n\tvec3 d2a = min(d21, d22);\n\td22 = max(d21, d22);\n\td21 = min(d2a, d23); // Smallest now not in d22 or d23\n\td23 = max(d2a, d23);\n\td22 = min(d22, d23); // 2nd smallest now not in d23\n\tvec3 d3a = min(d31, d32);\n\td32 = max(d31, d32);\n\td31 = min(d3a, d33); // Smallest now not in d32 or d33\n\td33 = max(d3a, d33);\n\td32 = min(d32, d33); // 2nd smallest now not in d33\n\tvec3 da = min(d11, d21);\n\td21 = max(d11, d21);\n\td11 = min(da, d31); // Smallest now in d11\n\td31 = max(da, d31); // 2nd smallest now not in d31\n\td11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;\n\td11.xz = (d11.x < d11.z) ? d11.xz : d11.zx; // d11.x now smallest\n\td12 = min(d12, d21); // 2nd smallest now not in d21\n\td12 = min(d12, d22); // nor in d22\n\td12 = min(d12, d31); // nor in d31\n\td12 = min(d12, d32); // nor in d32\n\td11.yz = min(d11.yz,d12.xy); // nor in d12.yz\n\td11.y = min(d11.y,d12.z); // Only two more to go\n\td11.y = min(d11.y,d11.z); // Done! (Phew!)\n\treturn sqrt(d11.xy); // F1, F2\n\n}\n\nvarying vec2 vUv;\nuniform int index;\nuniform float seed;\nuniform float resolution;\nuniform float res1;\nuniform float res2;\nuniform float resMix;\nuniform float mixScale;\nuniform sampler2D nebulaMap;\nconst int octaves = 16;\n\nvec3 getSphericalCoord(int index, float x, float y, float width) {\n    width /= 2.0;\n    x -= width;\n    y -= width;\n    vec3 coord = vec3(0.0, 0.0, 0.0);\n\n    if (index == 0) { coord.x=width; coord.y=-y; coord.z=-x; }\n    else if (index == 1) { coord.x=-width; coord.y=-y; coord.z=x; }\n    else if (index == 2) { coord.x=x; coord.y=width; coord.z=y; }\n    else if (index == 3) { coord.x=x; coord.y=-width; coord.z=-y; }\n    else if (index == 4) { coord.x=x; coord.y=-y; coord.z=width; }\n    else if (index == 5) { coord.x=-x; coord.y=-y; coord.z=-width; }\n\n    return normalize(coord);\n}\n\n// float simplexRidged(vec3 pos, float seed) {\n// \tfloat n = noise(vec4(pos, seed));\n// \tn = (n + 1.0) * 0.5;\n// \tn = 2.0 * (0.5 - abs(0.5 - n));\n// \treturn n;\n// }\n\nfloat simplexRidged(vec3 pos, float seed) {\n    float n = cnoise(vec3(pos + seed));\n    // n = (n + 1.0) * 0.5;\n    // n = 2.0 * (0.5 - abs(0.5 - n));\n    n = abs(n);\n    return n;\n}\n\nfloat simplex(vec3 pos, float seed) {\n    float n = cnoise(vec3(pos + seed));\n    // return (n + 1.0) * 0.5;\n    n = (n + 1.0) * 0.5;\n    // n = 2.0 * (0.5 - abs(0.5 - n));\n    return n;\n}\n\nfloat baseNoise(vec3 pos, float frq, float seed) {\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplex(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    // n = fract(n*10.0);\n    // n *= abs(sin(pos.y*10.0));\n    // n += 0.4;\n\n    // increase contrast\n    n = ((n - 0.5) * 3.0) + 0.6;\n\n    // n = pow(n, 3.0);\n    // n = pow( (1.0-n), 2.0);\n    // n = pow(n, 2.0);\n\n    // n = 1.0-n;\n    // n = pow(n, 6.0);\n    // n = 1.0-n;\n\n    return n;\n}\n\nfloat ridgedNoise(vec3 pos, float frq, float seed) {\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplexRidged(vec3(pos.x*gain/frq, 2.0*pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    // n = pow(n, 5.0);\n    // n = 1.0-n;\n    // n = pow(n, 2.0);\n    // n = 1.0-n;\n\n    return n;\n}\n\nfloat invRidgedNoise(vec3 pos, float frq, float seed) {\n    float amp = 0.5;\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    n = 1.0 - n;\n    n = pow(n, 2.0);\n    n = 1.0 - n;\n\n    return n;\n}\n\nfloat cloud(vec3 pos, float seed) {\n    float n = cnoise(vec3(pos + seed));\n    n = sin(n*4.0 * cos(n*2.0));\n    //    n = sin(n*7.0);\n\n    n = n*0.5 + 0.5;\n    // n = 1.0-n;\n    // n = n*1.2;\n    // n = 1.0-n;\n\n    return n;\n}\n\nfloat cloudNoise(vec3 pos, float frq, float seed) {\n    float amp = 0.5;\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  cloud(vec3(pos.x*gain/frq, 1.0*pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    // n = pow(n, 5.0);\n    n = 1.0-n;\n    n = pow(n, 1.0);\n    n = 1.0-n;\n\n    return n;\n}\n\nfloat star(vec3 pos, float seed) {\n    float n = cnoise(vec3(pos + seed));\n\n    n = abs(n);\n    // n = n*0.5 + 0.5;\n    // n = pow(n, 2.0);\n    // n = 1.0-n;\n    // n = n*1.2;\n    // n = 1.0-n;\n\n    return n;\n}\n\nfloat rand(vec3 co, float seed) {\n    return fract(sin(dot(co.xyz, vec3(12.9898, 78.233, 34.830))) * (43758.5453+seed)/resolution);\n}\n\nfloat starNoise(vec3 pos, float seed) {\n\n    float n = rand(pos.xyz*100.0, seed);\n\n    // n = pow(n, 2.0);\n    // if (n < 0.99) {\n    // \tn = 0.0;\n    // }\n\n    return n;\n}\n\nvoid main() {\n    float x = vUv.x;\n    float y = 1.0 - vUv.y;\n    vec3 sphericalCoord = getSphericalCoord(index, x*resolution, y*resolution, resolution);\n\n    // create nebula\n    float c1 = cloudNoise(sphericalCoord, res1, seed);\n    float c2 = cloudNoise(sphericalCoord + vec3(c1*res2*0.2), res2, seed+310.4);\n    // c2 = pow(c2, 5.0) * 1.0;\n    float c3 = cloudNoise(sphericalCoord, resMix, seed + 661.384);\n\n    float nebulaStrength = 2.0 * pow(c2, 3.0);\n    // float nebulaStrength = 1.0;\n    vec3 nColor = texture2D(nebulaMap, vec2(c3, c1)).rgb * nebulaStrength;\n    // float c4 = cloudNoise(sphericalCoord, resMix, seed + 61.684);\n    // c4 = pow(c4, 3.0) * 1.0;\n    // nColor = mix(nColor, nColor*0.3, c4*1.0);\n    vec4 nebula = vec4(nColor, 1.0);\n\n    // add in large stars to nebula\n    float sub1 = baseNoise(sphericalCoord, 0.003, seed+322.284);\n    vec2 F = worley((sphericalCoord * 150.0) + vec3(seed+35.890), 1.0, true);\n    float F1 = F.x;\n    float n2 = F1;\n    n2 = 1.0 - n2;\n    n2 *= 1.2;\n    n2 = pow(n2, 7.0);\n    n2 *= c2;\n    n2 *= sub1;\n    nebula += vec4(vec3(n2), 1.0);\n\n    float c4 = invRidgedNoise(sphericalCoord, 1.0, seed+38.476);\n\n    // c4 = ((c4 - 0.5) * 1.5) + 0.5;\n    // nebula.rgb += c4*0.3;\n    nebula.a = pow(c2, 1.0);\n    // nebula.rgb = ((nebula.rgb - 0.5) * (1.0+c2*1.0)) + 0.5;\n\n    gl_FragColor = nebula;\n}\n'},0:function(e,n){},"10kV":function(e,n){e.exports="#define GLSLIFY 1\n// Source: http://jsfiddle.net/VsWb9/770/\n\n//\n// Atmospheric scattering vertex shader\n//\n// Author: Sean O'Neil\n//\n// Copyright (c) 2004 Sean O'Neil\n//\n\nuniform vec3 v3LightPosition;// The direction vector to the light source\nuniform vec3 v3InvWavelength;// 1 / pow(wavelength, 4) for the red, green, and blue channels\nuniform float fCameraHeight;// The camera's current height\nuniform float fCameraHeight2;// fCameraHeight^2\nuniform float fOuterRadius;// The outer (atmosphere) radius\nuniform float fOuterRadius2;// fOuterRadius^2\nuniform float fInnerRadius;// The inner (planetary) radius\nuniform float fInnerRadius2;// fInnerRadius^2\nuniform float fKrESun;// Kr * ESun\nuniform float fKmESun;// Km * ESun\nuniform float fKr4PI;// Kr * 4 * PI\nuniform float fKm4PI;// Km * 4 * PI\nuniform float fScale;// 1 / (fOuterRadius - fInnerRadius)\nuniform float fScaleDepth;// The scale depth (i.e. the altitude at which the atmosphere's average density is found)\nuniform float fScaleOverScaleDepth;// fScale / fScaleDepth\n\nconst int nSamples = 3;\nconst float fSamples = 3.0;\n\nvarying vec3 v3Direction;\nvarying vec3 c0;\nvarying vec3 c1;\n\nfloat scale(float fCos)\n{\n    float x = 1.0 - fCos;\n    return fScaleDepth * exp(-0.00287 + x*(0.459 + x*(3.83 + x*(-6.80 + x*5.25))));\n}\n\nvoid main(void)\n{\n    // Get the ray from the camera to the vertex and its length (which is the far point of the ray passing through the atmosphere)\n    vec3 v3Ray = position - cameraPosition;\n    float fFar = length(v3Ray);\n    v3Ray /= fFar;\n\n    // Calculate the closest intersection of the ray with the outer atmosphere (which is the near point of the ray passing through the atmosphere)\n    float B = 2.0 * dot(cameraPosition, v3Ray);\n    float C = fCameraHeight2 - fOuterRadius2;\n    float fDet = max(0.0, B*B - 4.0 * C);\n    float fNear = 0.5 * (-B - sqrt(fDet));\n\n    // Calculate the ray's starting position, then calculate its scattering offset\n    vec3 v3Start = cameraPosition + v3Ray * fNear;\n    fFar -= fNear;\n    float fStartAngle = dot(v3Ray, v3Start) / fOuterRadius;\n    float fStartDepth = exp(-1.0 / fScaleDepth);\n    float fStartOffset = fStartDepth * scale(fStartAngle);\n    //c0 = vec3(1.0, 0, 0) * fStartAngle;\n\n    // Initialize the scattering loop variables\n    float fSampleLength = fFar / fSamples;\n    float fScaledLength = fSampleLength * fScale;\n    vec3 v3SampleRay = v3Ray * fSampleLength;\n    vec3 v3SamplePoint = v3Start + v3SampleRay * 0.5;\n\n    //gl_FrontColor = vec4(0.0, 0.0, 0.0, 0.0);\n\n    // Now loop through the sample rays\n    vec3 v3FrontColor = vec3(0.0, 0.0, 0.0);\n    for (int i=0; i<nSamples; ++i)\n    {\n        float fHeight = length(v3SamplePoint);\n        float fDepth = exp(fScaleOverScaleDepth * (fInnerRadius - fHeight));\n        float fLightAngle = dot(v3LightPosition, v3SamplePoint) / fHeight;\n        float fCameraAngle = dot(v3Ray, v3SamplePoint) / fHeight;\n        float fScatter = (fStartOffset + fDepth * (scale(fLightAngle) - scale(fCameraAngle)));\n        vec3 v3Attenuate = exp(-fScatter * (v3InvWavelength * fKr4PI + fKm4PI));\n\n        v3FrontColor += v3Attenuate * (fDepth * fScaledLength);\n        v3SamplePoint += v3SampleRay;\n    }\n\n    // Finally, scale the Mie and Rayleigh colors and set up the varying variables for the pixel shader\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    c0 = v3FrontColor * (v3InvWavelength * fKrESun);\n    c1 = v3FrontColor * fKmESun;\n    v3Direction = cameraPosition - position;\n}\n"},"594y":function(e,n){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform sampler2D texWater;\nuniform sampler2D texSand;\nuniform sampler2D texGrass;\nuniform sampler2D texStone;\nuniform sampler2D texSnow;\nuniform vec3 lightPosition;\nuniform vec4 lightColor;\nuniform float lightIntensity;\nuniform float radius;\nuniform float roughness;\nuniform float seed;\n\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vReflect;\nvarying vec3 vPosition;\nvarying vec3 vPosition01;\nvarying vec3 vNewPosition;\nvarying float displacement;\nvarying vec3 lightDirection;\n\nfloat random(vec3 p){\n    return fract(sin(dot(p.xyz, vec3(12.9898, 78.233, 1.23456))) * (5356.5453+ seed*1234.7582));\n}\n\nvoid main(void)\n{\n    vec3 blending = abs(vNormal);\n    blending = (blending - 0.25) * 8.0 / random(vNormal);\n    blending = max(blending, 0.0); // Force weights to sum to 1.0\n    float b = (blending.x + blending.y + blending.z);\n    blending /= vec3(b, b, b);\n\n    vec4 vec_waterx = texture2D(texWater, vPosition01.yz);\n    vec4 vec_watery = texture2D(texWater, vPosition01.xz);\n    vec4 vec_waterz = texture2D(texWater, vPosition01.xy);\n\n    vec4 vec_sandx = texture2D(texSand, vPosition01.yz);\n    vec4 vec_sandy = texture2D(texSand, vPosition01.xz);\n    vec4 vec_sandz = texture2D(texSand, vPosition01.xy);\n\n    vec4 vec_grassx = texture2D(texGrass, vPosition01.yz);\n    vec4 vec_grassy = texture2D(texGrass, vPosition01.xz);\n    vec4 vec_grassz = texture2D(texGrass, vPosition01.xy);\n\n    vec4 vec_stonex = texture2D(texStone, vPosition01.yz);\n    vec4 vec_stoney = texture2D(texStone, vPosition01.xz);\n    vec4 vec_stonez = texture2D(texStone, vPosition01.xy);\n\n    vec4 vec_snowx = texture2D(texSnow, vPosition01.yz);\n    vec4 vec_snowy = texture2D(texSnow, vPosition01.xz);\n    vec4 vec_snowz = texture2D(texSnow, vPosition01.xy);\n\n    vec4 vec_water = vec_waterx * blending.x + vec_watery * blending.y + vec_waterz * blending.z;\n    vec4 vec_sand = vec_sandx * blending.x + vec_sandy * blending.y + vec_sandz * blending.z;\n    vec4 vec_grass = vec_grassx * blending.x + vec_grassy * blending.y + vec_grassz * blending.z;\n    vec4 vec_stone = vec_stonex * blending.x + vec_stoney * blending.y + vec_stonez * blending.z;\n    vec4 vec_snow = vec_snowx * blending.x + vec_snowy * blending.y + vec_snowz * blending.z;\n\n    float vMax = roughness * radius;\n    float offset = length(vNewPosition) - radius;\n    vec4 color = vec_water;// begin with water everywhere\n    color = mix(vec_sand, color, smoothstep(vMax*0.035, vMax*0.025, offset));\n    color = mix(vec_grass, color, smoothstep(vMax*0.29, vMax*0.035, offset));\n    color = mix(vec_stone, color, smoothstep(vMax*0.423, vMax*0.29, offset));\n    color = mix(vec_snow, color, smoothstep(vMax, vMax*0.423, offset));\n\n    // simpliest hardcoded lighting\n    float c = max(0.1, dot(vNormal, lightDirection))* lightIntensity;\n    gl_FragColor = vec4(color.r*c, color.g*c, color.b*c, 1.0)*lightColor;\n}\n"},"6CdQ":function(e,n){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 4D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-08-22\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 fade(vec4 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec4 P)\n{\n  vec4 Pi0 = floor(P); // Integer part for indexing\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 ixy00 = permute(ixy0 + iw0);\n  vec4 ixy01 = permute(ixy0 + iw1);\n  vec4 ixy10 = permute(ixy1 + iw0);\n  vec4 ixy11 = permute(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 * (1.0 / 7.0);\n  vec4 gy00 = floor(gx00) * (1.0 / 7.0);\n  vec4 gz00 = floor(gy00) * (1.0 / 6.0);\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 * (1.0 / 7.0);\n  vec4 gy01 = floor(gx01) * (1.0 / 7.0);\n  vec4 gz01 = floor(gy01) * (1.0 / 6.0);\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 * (1.0 / 7.0);\n  vec4 gy10 = floor(gx10) * (1.0 / 7.0);\n  vec4 gz10 = floor(gy10) * (1.0 / 6.0);\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 * (1.0 / 7.0);\n  vec4 gy11 = floor(gx11) * (1.0 / 7.0);\n  vec4 gz11 = floor(gy11) * (1.0 / 6.0);\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\nvarying vec2 vUv;\n\nuniform sampler2D biomeMap;\nuniform sampler2D heightMap;\nuniform sampler2D moistureMap;\nuniform float waterLevel;\nuniform vec3 waterColor;\n\nvoid main() {\n    float x = vUv.x;\n    float y = vUv.y;\n\n    float n1 = texture2D(heightMap, vec2(x, y)).r;\n    float n2 = texture2D(moistureMap, vec2(x, y)).r;\n\n    vec4 color = texture2D(biomeMap, vec2(n2, n1));\n\n    vec4 water = vec4(waterColor, 1.0);\n\n    if (n1 < waterLevel) {\n        color = mix(water, color, 0.3);\n    }\n\n    float coastLevel = waterLevel * 0.90;\n    if (n1 < waterLevel && n1 > 0.4) {\n        vec4 coast = vec4(vec3(1.0), 1.0);\n        float amount = 1.0 - ((0.5 - n1) * 10.0);\n        color = mix(color, coast, amount*0.3);\n    }\n\n    gl_FragColor = color;\n}\n'},"7txM":function(e,n){e.exports="#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"},Gsp3:function(e,n){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 4D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-08-22\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 fade(vec4 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise, periodic version\nfloat pnoise(vec4 P, vec4 rep)\n{\n  vec4 Pi0 = mod(floor(P), rep); // Integer part modulo rep\n  vec4 Pi1 = mod(Pi0 + 1.0, rep); // Integer part + 1 mod rep\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 ixy00 = permute(ixy0 + iw0);\n  vec4 ixy01 = permute(ixy0 + iw1);\n  vec4 ixy10 = permute(ixy1 + iw0);\n  vec4 ixy11 = permute(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 * (1.0 / 7.0);\n  vec4 gy00 = floor(gx00) * (1.0 / 7.0);\n  vec4 gz00 = floor(gy00) * (1.0 / 6.0);\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 * (1.0 / 7.0);\n  vec4 gy01 = floor(gx01) * (1.0 / 7.0);\n  vec4 gz01 = floor(gy01) * (1.0 / 6.0);\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 * (1.0 / 7.0);\n  vec4 gy10 = floor(gx10) * (1.0 / 7.0);\n  vec4 gz10 = floor(gy10) * (1.0 / 6.0);\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 * (1.0 / 7.0);\n  vec4 gy11 = floor(gx11) * (1.0 / 7.0);\n  vec4 gz11 = floor(gy11) * (1.0 / 6.0);\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\nvarying vec3 vNormal;\nvarying vec3 vPosition;\nvarying vec3 cameraVector;\n\nuniform float time;\n\nuniform float atmo1;\nuniform float atmo2;\nuniform float atmo3;\nuniform float atmo4;\nuniform float atmo5;\n\nuniform float alpha;\n\nuniform vec3 color;\n\nvoid main() {\n    vec3 newColor = vec3(0.0);\n\n    const float ambient = 0.1;\n    vec3 light = vec3(-1.0, 1.0, 1.0);\n    light = normalize(light);\n    float directional = max(dot(vNormal, light), 0.0) * 1.0;\n    vec4 texelColor = vec4((directional + ambient) * newColor, 0.0);\n\n    // gl_FragColor = texelColor;\n    // gl_FragColor = vec4(1.0);\n\n    ////////////////////////////\n    // atmospheric scattering\n    ///////////////////////////\n\n    // float PI = 3.14159265358979323846264;\n    // // light = light - vPosition;\n    // vec3 cameraDir = normalize(cameraVector);\n    //\n    // // vec3 newNormal = bumpNormal(normalMap, vUv);\n    // vec3 newNormal = vNormal;\n    //\n    // light = normalize(light);\n    //\n    // float lightAngle = max(0.0, dot(newNormal, light));\n    // float viewAngle = max(0.0, dot(vNormal, cameraDir));\n    // float adjustedLightAngle = min(0.6, lightAngle) / 0.6;\n    // float adjustedViewAngle = min(0.65, viewAngle) / 0.65;\n    // float invertedViewAngle = pow(acos(viewAngle), 3.0) * 0.4;\n    //\n    // float dProd = 0.0;\n    // dProd += atmo1 * lightAngle;\n    // dProd += atmo2 * lightAngle * (invertedViewAngle - atmo5);\n    // dProd += invertedViewAngle * 1.5 * (max(-0.35, dot(vNormal, light)) + 0.35);\n    // dProd *= atmo3 + pow(invertedViewAngle/(PI/2.0), 2.0);\n    //\n    // dProd *= atmo4;\n    // vec4 atmColor = vec4(color, dProd);\n    //\n    // // texelColor = texture2D(map, vUv) * min(asin(lightAngle), 1.0);\n    // // texelColor = newColor * min(asin(lightAngle), 1.0);\n    //\n    // gl_FragColor = texelColor + min(atmColor, alpha);\n\n    /////////////////////////\n\n    float PI = 3.14159265358979323846264;\n    // light = light - vPosition;\n    vec3 cameraDir = normalize(cameraVector);\n\n    // vec3 newNormal = bumpNormal(normalMap, vUv);\n    vec3 newNormal = vNormal;\n\n    light = normalize(light);\n\n    float lightAngle = max(0.0, dot(newNormal, light));\n    float viewAngle = max(0.0, dot(vNormal, cameraDir));\n    float adjustedLightAngle = min(0.6, lightAngle) / 0.6;\n    float adjustedViewAngle = min(0.65, viewAngle) / 0.65;\n    float invertedViewAngle = pow(acos(viewAngle), 3.0) * 0.4;\n\n    float dProd = 0.0;\n    dProd += atmo1 * lightAngle;\n    dProd += atmo2 * lightAngle * (invertedViewAngle - atmo5);\n    dProd += invertedViewAngle * 1.5 * (max(-0.35, dot(vNormal, light)) + 0.35);\n    dProd *= atmo3 + pow(invertedViewAngle/(PI/2.0), 2.0);\n\n    dProd *= atmo4;\n\n    vec4 atmColor = vec4(color, dProd);\n\n    // texelColor = texture2D(map, vUv) * min(asin(lightAngle), 1.0);\n    // texelColor = newColor * min(asin(lightAngle), 1.0);\n\n    gl_FragColor = texelColor + min(atmColor, alpha);\n}\n'},NbV9:function(e,n,t){e.exports=t.p+"assets/textures/moon.png"},OUBw:function(e,n){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform vec3 lightPosition;\nuniform vec4 lightColor;\nuniform float lightIntensity;\nuniform float time;\n\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\nvarying vec3 vPosition01;\nvarying vec3 lightDirection;\n\nvoid main(void) {\n    vUv = uv;\n    vPosition01 = normalize(position)/2.0 + vec3(0.5, 0.5, 0.5);\n    vPosition = position;\n    lightDirection = normalize(lightPosition - vPosition);\n    vNormal = normal;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"},PP0w:function(e,n){e.exports="#define GLSLIFY 1\n// Source: http://jsfiddle.net/VsWb9/770/\n\n//\n// Atmospheric scattering fragment shader\n//\n// Author: Sean O'Neil\n//\n// Copyright (c) 2004 Sean O'Neil\n//\n\nuniform vec3 v3LightPos;\nuniform float g;\nuniform float g2;\nuniform vec3 atmosphereColor;\n\nvarying vec3 v3Direction;\nvarying vec3 c0;\nvarying vec3 c1;\n\n// Calculates the Mie phase function\nfloat getMiePhase(float fCos, float fCos2, float g, float g2)\n{\n    return 1.5 * ((1.0 - g2) / (2.0 + g2)) * (1.0 + fCos2) / pow(1.0 + g2 - 2.0 * g * fCos, 1.5);\n}\n\n// Calculates the Rayleigh phase function\nfloat getRayleighPhase(float fCos2)\n{\n    return 0.75 + 0.75 * fCos2;\n}\n\nvoid main (void)\n{\n    float fCos = dot(v3LightPos, v3Direction) / length(v3Direction);\n    float fCos2 = fCos * fCos;\n\n    vec3 color =  getRayleighPhase(fCos2) * c0 + getMiePhase(fCos, fCos2, g, g2) * c1;\n\n    gl_FragColor = vec4(color, 1.0);\n    gl_FragColor.a = gl_FragColor.b;\n}\n"},Qn61:function(e,n,t){e.exports=t.p+"assets/textures/sand2.jpg"},RWZA:function(e,n,t){e.exports=t.p+"assets/textures/snow2.jpg"},SQyz:function(e,n){e.exports="#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"},UmO4:function(e,n,t){e.exports=t.p+"assets/textures/water1.jpg"},VWZf:function(e,n){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nconst float PI = 3.14159265359;\n\nvarying vec2 vUv;\nuniform int index;\nuniform float seed;\nuniform float resolution;\nuniform float res1;\nuniform float res2;\nuniform float resMix;\nuniform float mixScale;\nuniform int ridgesType;\nconst int octaves = 16;\n\nvec3 getSphericalCoord(int index, float x, float y, float width) {\n    width /= 2.0;\n    x -= width;\n    y -= width;\n    vec3 coord = vec3(0.0, 0.0, 0.0);\n\n    if (index == 0) { coord.x=width; coord.y=-y; coord.z=-x; }\n    else if (index == 1) { coord.x=-width; coord.y=-y; coord.z=x; }\n    else if (index == 2) { coord.x=x; coord.y=width; coord.z=y; }\n    else if (index == 3) { coord.x=x; coord.y=-width; coord.z=-y; }\n    else if (index == 4) { coord.x=x; coord.y=-y; coord.z=width; }\n    else if (index == 5) { coord.x=-x; coord.y=-y; coord.z=-width; }\n\n    return normalize(coord);\n}\n\nfloat simplexRidged(vec3 pos, float seed) {\n    float n = cnoise(vec3(pos + seed));\n    n = (n + 1.0) * 0.5;\n    n = 2.0 * (0.5 - abs(0.5 - n));\n    return n;\n}\n\nfloat simplex(vec3 pos, float seed) {\n    float n = cnoise(vec3(pos + seed));\n    return (n + 1.0) * 0.5;\n}\n\nfloat baseNoise(vec3 pos, float frq, float seed) {\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplex(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    // increase contrast\n    n = ((n - 0.5) * 2.0) + 0.5;\n\n    return n;\n}\n\nfloat ridgedNoise(vec3 pos, float frq, float seed) {\n    float amp = 0.5;\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    n = pow(n, 4.0);\n    return n;\n}\n\nfloat invRidgedNoise(vec3 pos, float frq, float seed) {\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    n = pow(n, 4.0);\n    n = 1.0 - n;\n\n    return n;\n}\n\nfloat cloud(vec3 pos, float seed) {\n    float n = cnoise(vec3(pos + seed));\n    // n = sin(n*4.0 * cos(n*2.0));\n    n = sin(n*5.0);\n    // n = abs(sin(n*5.0));\n    // n = 1.0 - n;\n\n    n = n*0.5 + 0.5;\n    // n = 1.0-n;\n    // n = n*1.2;\n    // n = 1.0-n;\n\n    return n;\n}\n\nfloat cloudNoise(vec3 pos, float frq, float seed) {\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  cloud(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    // n = pow(n, 5.0);\n\n    n = 1.0-n;\n    n = pow(n, 1.0);\n    n = 1.0-n;\n\n    return n;\n}\n\nvoid main() {\n    float x = vUv.x;\n    float y = 1.0 - vUv.y;\n    vec3 sphericalCoord = getSphericalCoord(index, x*resolution, y*resolution, resolution);\n\n    float sub1, sub2, sub3, n;\n\n    float resMod = 1.0;// overall res magnification\n    float resMod2 = mixScale;// minimum res mod\n\n    if (ridgesType == 0) {\n        sub1 = cloudNoise(sphericalCoord, res1*resMod, seed+11.437);\n        sub2 = cloudNoise(sphericalCoord, res2*resMod, seed+93.483);\n        sub3 = cloudNoise(sphericalCoord, resMix*resMod, seed+23.675);\n        n = cloudNoise(sphericalCoord + vec3((sub1/sub3)*0.1), resMod2+sub2, seed+78.236);\n    }\n    else if (ridgesType == 1) {\n        sub1 = ridgedNoise(sphericalCoord, res1*resMod, seed+83.706);\n        sub2 = ridgedNoise(sphericalCoord, res2*resMod, seed+29.358);\n        sub3 = ridgedNoise(sphericalCoord, resMix*resMod, seed+53.041);\n        n = ridgedNoise(sphericalCoord + vec3((sub1/sub3)*0.1), resMod2+sub2, seed+34.982);\n    }\n    else if (ridgesType == 2) {\n        sub1 = invRidgedNoise(sphericalCoord, res1*resMod, seed+49.684);\n        sub2 = invRidgedNoise(sphericalCoord, res2*resMod, seed+136.276);\n        sub3 = invRidgedNoise(sphericalCoord, resMix*resMod, seed+3.587);\n        n = invRidgedNoise(sphericalCoord + vec3((sub1/sub3)*0.1), resMod2+sub2, seed+33.321);\n    }\n    else {\n        sub1 = baseNoise(sphericalCoord, res1*resMod, seed+52.284);\n        sub2 = baseNoise(sphericalCoord, res2*resMod, seed+137.863);\n        sub3 = baseNoise(sphericalCoord, resMix*resMod, seed+37.241);\n        float alpha = sub1*3.14*2.0;\n        float beta = sub2*3.14*2.0;\n        float fx = cos(alpha)*cos(beta);\n        float fz = sin(alpha)*cos(beta);\n        float fy = sin(beta);\n        n = baseNoise(sphericalCoord + (vec3(fx, fy, fz) * sub3), 1.0, seed+28.634);\n    }\n\n    gl_FragColor = vec4(vec3(n), 1.0);\n}\n'},WcgB:function(e,n,t){e.exports=t.p+"assets/textures/water_normals1.jpg"},a6jw:function(e,n){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 4D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-08-22\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 fade(vec4 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec4 P)\n{\n  vec4 Pi0 = floor(P); // Integer part for indexing\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 ixy00 = permute(ixy0 + iw0);\n  vec4 ixy01 = permute(ixy0 + iw1);\n  vec4 ixy10 = permute(ixy1 + iw0);\n  vec4 ixy11 = permute(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 * (1.0 / 7.0);\n  vec4 gy00 = floor(gx00) * (1.0 / 7.0);\n  vec4 gz00 = floor(gy00) * (1.0 / 6.0);\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 * (1.0 / 7.0);\n  vec4 gy01 = floor(gx01) * (1.0 / 7.0);\n  vec4 gz01 = floor(gy01) * (1.0 / 6.0);\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 * (1.0 / 7.0);\n  vec4 gy10 = floor(gx10) * (1.0 / 7.0);\n  vec4 gz10 = floor(gy10) * (1.0 / 6.0);\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 * (1.0 / 7.0);\n  vec4 gy11 = floor(gx11) * (1.0 / 7.0);\n  vec4 gz11 = floor(gy11) * (1.0 / 6.0);\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\nvarying vec2 vUv;\nuniform int index;\nuniform float seed;\nuniform float resolution;\nuniform float res1;\nuniform float res2;\nuniform float resMix;\nuniform float mixScale;\n\nvec3 getSphericalCoord(int index, float x, float y, float width) {\n    width /= 2.0;\n    x -= width;\n    y -= width;\n    vec3 coord = vec3(0.0, 0.0, 0.0);\n\n    if (index == 0) { coord.x=width; coord.y=-y; coord.z=-x; }\n    else if (index == 1) { coord.x=-width; coord.y=-y; coord.z=x; }\n    else if (index == 2) { coord.x=x; coord.y=width; coord.z=y; }\n    else if (index == 3) { coord.x=x; coord.y=-width; coord.z=-y; }\n    else if (index == 4) { coord.x=x; coord.y=-y; coord.z=width; }\n    else if (index == 5) { coord.x=-x; coord.y=-y; coord.z=-width; }\n\n    return normalize(coord);\n}\n\n// float simplexRidged(vec3 pos, float seed) {\n// \tfloat n = noise(vec4(pos, seed));\n// \tn = (n + 1.0) * 0.5;\n// \tn = 2.0 * (0.5 - abs(0.5 - n));\n// \treturn n;\n// }\n\nfloat simplexRidged(vec3 pos, float seed) {\n    float n = cnoise(vec4(pos, seed));\n    // n = (n + 1.0) * 0.5;\n    // n = 2.0 * (0.5 - abs(0.5 - n));\n    n = abs(n);\n    return n;\n}\n\nfloat simplex(vec3 pos, float seed) {\n    float n = cnoise(vec4(pos, seed));\n    // return (n + 1.0) * 0.5;\n    n = (n + 1.0) * 0.5;\n    // n = 2.0 * (0.5 - abs(0.5 - n));\n    return n;\n}\n\nfloat baseNoise(vec3 pos, float frq, float seed) {\n    const int octaves = 16;\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n        // amp *= 2.0;\n    }\n\n    // n = fract(n*10.0);\n    // n *= abs(sin(pos.y*10.0));\n    // n += 0.4;\n\n    // increase contrast\n    n = ((n - 0.5) * 2.0) + 0.6;\n\n    // n = pow(n, 3.0);\n    // n = pow( (1.0-n), 2.0);\n    // n = pow(n, 2.0);\n\n    // n = 1.0-n;\n    // n = pow(n, 6.0);\n    // n = 1.0-n;\n\n    return n;\n}\n\nfloat ridgedNoise(vec3 pos, float frq, float seed) {\n    const int octaves = 16;\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplexRidged(vec3(pos.x*gain/frq, 2.0*pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    // n = pow(n, 5.0);\n\n    n = 1.0-n;\n    n = pow(n, 6.0);\n    n = 1.0-n;\n\n    return n;\n}\n\nfloat billowNoise(vec3 pos, float frq, float seed) {\n    const int octaves = 16;\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    n = 1.0-n;\n    n = pow(n, 1.0);\n    n = 1.0-n;\n\n    return n;\n}\n\nfloat cloud(vec3 pos, float seed) {\n    float n = cnoise(vec4(pos, seed));\n    // n = sin(n*4.0 * cos(n*2.0));\n    n = sin(n*3.0);\n\n    n = n*0.5 + 0.5;\n\n    // n = abs(n);\n    // n = 1.0-n;\n    // n = n*1.2;\n    // n = 1.0-n;\n\n    return n;\n}\n\nfloat cloudNoise(vec3 pos, float frq, float seed) {\n    const int octaves = 32;\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  cloud(vec3(pos.x*gain/frq, 1.0*pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    // n = pow(n, 5.0);\n\n    n = 1.0-n;\n    // n = pow(n, mixScale);\n    n = pow(n, 1.0);\n    n = 1.0-n;\n\n    return n;\n}\n\nfloat perlin(vec3 pos, float seed) {\n    float n = cnoise(vec4(pos, seed));\n    n = (n + 1.0) * 0.5;\n    return n;\n}\n\nfloat perlinNoise(vec3 pos, float frq, float seed) {\n\n    const int octaves = 16;\n    float n = 0.0;\n    float amplitude = 0.7;\n\n    for (int i = 0; i < octaves; ++i) {\n        n += amplitude * perlin(pos*frq, seed);\n        frq *= 2.0;// lacunarity = 2.0\n        amplitude *= n;// gain = 0.5\n    }\n\n    n = pow(n, 2.0);\n\n    return n;\n}\n\nvoid main() {\n    float x = vUv.x;\n    float y = 1.0 - vUv.y;\n    vec3 sphericalCoord = getSphericalCoord(index, x*resolution, y*resolution, resolution);\n\n    /////////////////\n    float sub1 = baseNoise(sphericalCoord, 0.5, seed);\n    float sub1b = billowNoise(sphericalCoord, 1.0, seed+93.386);\n    float n1 = baseNoise(sphericalCoord + vec3(sub1*0.3), 0.5, seed+38.378);\n\n    float sub2 = baseNoise(sphericalCoord, 0.5, seed+12.412);\n    float n2 = baseNoise(sphericalCoord + vec3(sub2*0.3), 0.5+sub1b, seed+58.578);\n\n    n1 = 1.0-n1;\n    n1 *= 0.1;\n    n1 = 1.0-n1;\n\n    n2 = 1.0-n2;\n    n2 = pow(n2, 5.0);\n    n2 *= 0.314;\n    n2 = 1.0-n2;\n    n2 = pow(n2, 5.0);\n\n    gl_FragColor = vec4(vec3(n1), n2);\n    ///////////////////\n\n    // float sub1 = perlinNoise(sphericalCoord, 1.0, seed);\n    // float n1 = billowNoise(sphericalCoord + vec3(sub1*0.1), 0.5, seed+38.378);\n    //\n    // gl_FragColor = vec4(vec3(n1), n1);\n}\n'},aZBE:function(e,n,t){e.exports=t.p+"assets/textures/stone2.jpg"},e6Wu:function(e,n,t){"use strict";t.r(n),function(e){t("SYky"),t("hZTp");var n=t("uPvV"),o=t.n(n),r=t("qIj2"),a=void 0;e.THREE=t("Womt"),window.addEventListener("load",(function(){if(o.a.isWebGLAvailable()){var e={container:document.getElementById("canvas-container")};if(null===e.container){var n=document.createElement("div");n.setAttribute("class","container"),n.setAttribute("id","canvas-container"),document.body.appendChild(n),e.container=n}var t=new r.a(e);t.init(),t.animate()}else{var i=o.a.getWebGLErrorMessage();a.container.appendChild(i)}}))}.call(this,t("yLpj"))},hZTp:function(e,n,t){},k2iR:function(e,n){e.exports="#define GLSLIFY 1\nvarying vec2 vUv;\nuniform float resolution;\nuniform float waterLevel;\nuniform sampler2D heightMap;\nuniform sampler2D textureMap;\n\nfloat getBrightness(vec4 color) {\n    float bright = 1.0 - (0.2126*color.r + 0.7152*color.g + 0.0722*color.b);\n    // if (bright > 0.6) {\n    // \tbright *= 0.3;\n    // }\n    return bright;\n}\n\nvoid main() {\n    float x = vUv.x;\n    float y = vUv.y;\n    // float x = gl_FragCoord.x / 1024.0;\n    // float y = gl_FragCoord.y / 1024.0;\n    float pixelSize = 1.0 / resolution;\n\n    // Value from trial & error.\n    // Seems to work fine for the scales we are dealing with.\n    // float strength = scale.Y / 16;\n    float strength = 0.8;\n\n    float level = texture2D(heightMap, vec2(x, y)).r;\n    float water = waterLevel;\n    // float mod = 1.0;\n    // if (level < water) {\n    // \tmod = 0.1;\n    // }\n\n    float tl = getBrightness(texture2D(textureMap, vec2(x-pixelSize, y-pixelSize)));\n    float l = getBrightness(texture2D(textureMap, vec2(x-pixelSize, y)));\n    float bl = getBrightness(texture2D(textureMap, vec2(x-pixelSize, y+pixelSize)));\n    float b = getBrightness(texture2D(textureMap, vec2(x, y+pixelSize)));\n    float br = getBrightness(texture2D(textureMap, vec2(x+pixelSize, y+pixelSize)));\n    float r = getBrightness(texture2D(textureMap, vec2(x+pixelSize, y)));\n    float tr = getBrightness(texture2D(textureMap, vec2(x+pixelSize, y-pixelSize)));\n    float t = getBrightness(texture2D(textureMap, vec2(x, y-pixelSize)));\n\n    float tl2 = getBrightness(texture2D(heightMap, vec2(x-pixelSize, y-pixelSize)));\n    float l2 = getBrightness(texture2D(heightMap, vec2(x-pixelSize, y)));\n    float bl2 = getBrightness(texture2D(heightMap, vec2(x-pixelSize, y+pixelSize)));\n    float b2 = getBrightness(texture2D(heightMap, vec2(x, y+pixelSize)));\n    float br2 = getBrightness(texture2D(heightMap, vec2(x+pixelSize, y+pixelSize)));\n    float r2 = getBrightness(texture2D(heightMap, vec2(x+pixelSize, y)));\n    float tr2 = getBrightness(texture2D(heightMap, vec2(x+pixelSize, y-pixelSize)));\n    float t2 = getBrightness(texture2D(heightMap, vec2(x, y-pixelSize)));\n\n    float ratio = 1.0;\n\n    if (level > water) {\n        float diff = water - level;\n        ratio = 1.0 - (diff*1.0);\n    }\n\n    tl = mix(tl, tl2, ratio);\n    l = mix(l, l2, ratio);\n    bl = mix(bl, bl2, ratio);\n    b = mix(b, b2, ratio);\n    br = mix(br, br2, ratio);\n    r = mix(r, r2, ratio);\n    tr = mix(tr, tr2, ratio);\n    t = mix(t, t2, ratio);\n\n    // float level = getBrightness(texture2D(heightMap, vec2(x, y)));\n\n    // smooth out the normal map for the water\n    float factor = 0.01;\n    float depth = 0.5;\n    if (level < water) {\n        // strength = 0.00;\n        tl = mix(depth, tl, factor);\n        l = mix(depth, l, factor);\n        bl = mix(depth, bl, factor);\n        b = mix(depth, b, factor);\n        br = mix(depth, br, factor);\n        r = mix(depth, r, factor);\n        tr = mix(depth, tr, factor);\n        t = mix(depth, t, factor);\n    }\n\n    // Compute dx using Sobel:\n    //           -1 0 1\n    //           -2 0 2\n    //           -1 0 1\n    float dX = tr + 2.0 * r + br - tl - 2.0 * l - bl;\n\n    // Compute dy using Sobel:\n    //           -1 -2 -1\n    //            0  0  0\n    //            1  2  1\n    float dY = bl + 2.0 * b + br - tl - 2.0 * t - tr;\n\n    vec3 N = vec3(dX, dY, 1.0 / strength);\n\n    //\n    // if (level < 0.5) {\n    // \tN.x = 0.5;\n    // \tN.y = 0.5;\n    // \tN.z = -0.5;\n    //\n    // }\n    normalize(N);\n\n    //convert (-1.0 , 1.0) to (0.0 , 1.0), if necessary\n    //Vector3 scale = new Vector3(0.5f, 0.5f, 0.5f);\n    //Vector3.Multiply(ref N, ref scale, out N);\n    //Vector3.Add(ref N, ref scale, out N);\n\n    N = N * 0.5 + 0.5;\n\n    gl_FragColor = vec4(N, 1.0);\n}\n"},kvsF:function(e,n){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform vec3 lightPosition;\nuniform vec4 lightColor;\nuniform float lightIntensity;\nuniform float seed;\n\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\nvarying vec3 vPosition01;\nvarying vec3 lightDirection;\n\nvoid main(void)\n{\n    float reflect = pow(0.8 - dot(vNormal, vec3(0.0, 0.0, 1.0)), 8.0);\n    float a = max(0.0, dot(vNormal, lightDirection))*lightIntensity*1.5;\n    vec4 color = vec4(0.078, 0.227, 0.341, 0.9);\n    gl_FragColor = color * reflect * a;\n}\n"},l8Vw:function(e,n){e.exports="#define GLSLIFY 1\nvarying vec2 vUv;\nuniform float resolution;\nuniform sampler2D heightMap;\nuniform float waterLevel;\n\nfloat getBrightness(vec4 color) {\n    return 1.0 - (0.2126*color.r + 0.7152*color.g + 0.0722*color.b);\n}\n\nvoid main() {\n    float x = vUv.x;\n    float y = vUv.y;\n\n    float pixelSize = 1.0 / resolution;\n\n    float n = texture2D(heightMap, vec2(x, y)).r;\n    float roughness = 0.0;\n\n    if (n < waterLevel) {\n        roughness = 0.45;\n    } else {\n        roughness = 0.85;\n    }\n\n    gl_FragColor = vec4(vec3(roughness), 1.0);\n}\n"},oMeY:function(e,n){e.exports="precision highp float;\n#define GLSLIFY 1\n\nuniform sampler2D texWater;\nuniform float radius;\nuniform vec3 lightPosition;\nuniform vec4 lightColor;\nuniform float lightIntensity;\nuniform float time;\nuniform float seed;\n\nvarying vec2 vUv;\nvarying vec3 vPosition01;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nvarying vec3 lightDirection;\n\nfloat random(vec3 p) {\n    return fract(sin(dot(p.xyz, vec3(12.9898, 78.233, 1.23456))) * (5356.5453+ seed*1234.7582));\n}\n\nvec4 getNormal(vec2 uv, float speed) {\n    float scaleFactor = 0.06;\n    float sint = sin(time*speed)*scaleFactor/2.0;\n    float cost = cos(time*speed)*scaleFactor/3.0;\n\n    float x1 = uv.x + sint;\n    float y1 = uv.y + cost;\n\n    float x2 = uv.x - sint;\n    float y2 = uv.y - cost;\n\n    float x3 = uv.x - sint;\n    float y3 = uv.y + cost;\n\n    float x4 = uv.x + sint;\n    float y4 = uv.y - cost;\n\n    vec4 normal = texture2D(texWater, vec2(x1, y2)) + texture2D(texWater, vec2(x2, y2)) +\n    texture2D(texWater, vec2(x3, y3)) + texture2D(texWater, vec2(x4, y4));\n    normal.xyz = normal.xyz/3.74;\n    return normal;\n}\n\nvoid main(void) {\n    vec3 blending = abs(vNormal);\n    blending = (blending - 0.2) * 3.14 * random(vNormal);\n    blending = max(blending, 0.0);// Force weights to sum to 1.0\n    float b = (blending.x + blending.y + blending.z);\n    blending /= vec3(b, b, b);\n\n    vec4 vec_texx = getNormal(vPosition01.yz, 30.0);\n    vec4 vec_texy = getNormal(vPosition01.xz, 32.0);\n    vec4 vec_texz = getNormal(vPosition01.xy, 34.0);\n\n    vec4 normalTex = vec_texx * blending.x + vec_texy * blending.y + vec_texz * blending.z;\n\n    float a = max(0.27, dot(((normalTex.rgb*2.0-1.0)+vNormal)/2.0, lightDirection));\n\n    vec4 color = vec4(0.0, 0.35, 0.471, 1.0);\n    color.xyz = color.xyz*lightIntensity;\n\n    vec4 finalColor = lightColor*color*a;\n\n    gl_FragColor = vec4(finalColor.xyz, 0.75);\n}\n"},qIj2:function(e,n,t){"use strict";var o=t("bMjy"),r=t.n(o),a=t("4S22"),i=t.n(a),s=t("WTlQ"),c=t.n(s),l=t("YSVl"),f=t.n(l),u=t("ILOl"),d=t.n(u),v=t("/HZK"),p=t("Fu16"),g=t("Womt"),h=t("nPuz"),y=t.n(h),m=t("iZKT"),x=t("MZFn");function w(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var b=function(){function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.base=document.createElement("div"),this.base.id="loadingBarHolder",this.base.innerHTML='Rendering</br><div id="loadingBarBase"><div id="loadingBar"></div></div>'}var n,t,o;return n=e,(t=[{key:"update",value:function(e){this.bar=document.getElementById("loadingBar"),this.bar&&(this.bar.style.width=100*e+"%")}},{key:"show",value:function(){document.body.appendChild(this.base),this.bar=document.getElementById("loadingBar"),this.bar&&(this.bar.style.width="0%")}},{key:"hide",value:function(){document.body.removeChild(this.base)}}])&&w(n.prototype,t),o&&w(n,o),e}();function z(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var P=function(){function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.actions=[],this.callbacks=[],this.skipFrame=!1,this.lastTime=0,this.totalActions=0,this.loadingBar=new b}var n,t,o;return n=e,(t=[{key:"start",value:function(){this.startFrame=!0,this.lastTime=Date.now(),this.loadingBar.show()}},{key:"finish",value:function(){this.addCallback((function(){}))}},{key:"update",value:function(){!1===this.startFrame?this.actions.length>0?this.doNextAction():this.checkCallbacks():(this.startFrame=!1,this.totalActions=this.actions.length)}},{key:"doNextAction",value:function(){var e=Date.now();this.lastTime,this.lastTime=e,this.actions[0](),this.actions.shift();var n=this.actions.length/this.totalActions;n=1-n,this.loadingBar.update(n)}},{key:"addAction",value:function(e){this.actions.push(e)}},{key:"addCallback",value:function(e){this.callbacks.push(e)}},{key:"checkCallbacks",value:function(){this.callbacks.length>0&&this.executeCallbacks()}},{key:"executeCallbacks",value:function(){for(var e=0;e<this.callbacks.length;++e)this.callbacks[e]();this.loadingBar.hide(),this.callbacks=[]}}])&&z(n.prototype,t),o&&z(n,o),e}();function S(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function C(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var M=function(){function e(){var n=this;arguments.length>0&&void 0!==arguments[0]&&arguments[0];S(this,e),this.renderQueue=new P,window.renderQueue=this.renderQueue,this.stats=new x,this.stats.setMode(0),document.body.appendChild(this.stats.domElement),this.stats.domElement.style.position="absolute",this.stats.domElement.style.left="10px",this.stats.domElement.style.top="0px",this._scene=new g.Scene,this._camera=new g.PerspectiveCamera(50,window.innerWidth/window.innerHeight,1,1e5),this._camera.position.z=2800,this._camera.lookAt(new g.Vector3(0,0,0)),window.camera=this._camera,this._renderer=new g.WebGLRenderer({antialias:!1,alpha:!0}),this._renderer.setPixelRatio(window.devicePixelRatio),this._renderer.sortObjects=!1,this._renderer.setSize(window.innerWidth,window.innerHeight),window.renderer=this._renderer,document.body.appendChild(this._renderer.domElement),this.ambientLight=new g.AmbientLight(16777215,.1),this._scene.add(this.ambientLight),this.directionalLight=new g.DirectionalLight(16777215,1.6),this.directionalLight.position.set(-1,1,1),this._scene.add(this.directionalLight),window.light=this.directionalLight,this._controls=new y.a(this._camera,this._renderer.domElement),this._controls.enabled=!0,this._controls.enableDamping=!0,this._controls.dampingFactor=.1,this._controls.rotateSpeed=.1,this._controls.autoRotate=!0,this._controls.autoRotateSpeed=.02,this._controls.zoomSpeed=.5,this._controls.enableZoom=!0,this.gui=new m.a,window.gui=this.gui,this._createControls(),this.gui.open(),window.addEventListener("resize",this.onWindowResize.bind(this),!1),window.addEventListener("keydown",(function(e){n.onKeyDown(e)}),!1)}var n,t,o;return n=e,(t=[{key:"init",value:function(){}},{key:"_createControls",value:function(){var e=this,n=this.gui.addFolder("Lighting");this.sunColor={r:255,g:255,b:255},n.addColor(this,"sunColor").onChange((function(n){e.directionalLight.color.r=e.sunColor.r/255,e.directionalLight.color.g=e.sunColor.g/255,e.directionalLight.color.b=e.sunColor.b/255})),n.add(this.directionalLight,"intensity",0,3),this.ambientColor={r:255,g:255,b:255},n.addColor(this,"ambientColor").onChange((function(n){e.ambientLight.color.r=e.ambientColor.r/255,e.ambientLight.color.g=e.ambientColor.g/255,e.ambientLight.color.b=e.ambientColor.b/255})),n.add(this.ambientLight,"intensity",0,2);var t=this.gui.addFolder("Camera");t.add(this._controls,"autoRotate").name("rotate"),t.add(this._camera.position,"x").name("Camera X").min(-1e4).max(1e4).step(.5),t.add(this._camera.position,"y").name("Camera Y").min(-1e4).max(1e4).step(.5),t.add(this._camera.position,"z").name("Camera Z").min(-1e4).max(1e4).step(.5),t.add(this._camera,"fov",20,120).onChange((function(n){e._camera.updateProjectionMatrix()}))}},{key:"onKeyDown",value:function(e){if("72"===e.keyCode){var n=document.getElementById("brandTag"),t=document.getElementById("infoBoxHolder");"hidden"===n.style.visibility?(n.style.visibility="visible",t.style.visibility="visible"):(n.style.visibility="hidden",t.style.visibility="hidden")}}},{key:"onWindowResize",value:function(){this._camera.aspect=window.innerWidth/window.innerHeight,this._camera.updateProjectionMatrix(),this._renderer.setSize(window.innerWidth,window.innerHeight)}},{key:"animate",value:function(e){this.stats.begin(),requestAnimationFrame(this.animate.bind(this)),this._controls.update(),this._renderer.render(this._scene,this._camera),window.renderQueue.update(),this.stats.end()}},{key:"renderer",get:function(){return this._renderer}},{key:"camera",get:function(){return this._camera}},{key:"scene",get:function(){return this._scene}}])&&C(n.prototype,t),o&&C(n,o),e}();function R(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var _=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.object=n,this.prop=t}var n,t,o;return n=e,(t=[{key:"color",get:function(){return"#".concat(this.object[this.prop].getHexString())},set:function(e){this.object[this.prop].set(e)}}])&&R(n.prototype,t),o&&R(n,o),e}();function j(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function O(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var k=function(){function e(n,t){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"200px",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"canvas";j(this,e),this.canvas=document.createElement(r),this.canvas.id=n,this.canvas.width=t,this.canvas.height=t,this.canvas.style.width=o,this.canvas.style.height=o,this.width=this.canvas.width,this.height=this.canvas.height,this.ctx=this.canvas.getContext("2d"),this.texture=new g.CanvasTexture(this.canvas),document.body.appendChild(this.canvas),this.visibleCanvas(!1)}var n,t,o;return n=e,(t=[{key:"generateTexture",value:function(e){}},{key:"visibleCanvas",value:function(e){this.canvas.style.display=e?"block":"none"}},{key:"clear",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"#000000";this.ctx.fillStyle=e,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"toCanvasColor",value:function(e){return"rgba("+Math.round(255*e.r)+", "+Math.round(255*e.g)+", "+Math.round(255*e.b)+", 1.0)"}},{key:"randRange",value:function(e,n){var t=n-e;return e+window.rng()*t}},{key:"mix",value:function(e,n,t){return e+(n-e)*t}}])&&O(n.prototype,t),o&&O(n,o),e}();function D(e){return(D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function L(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function K(e,n){return(K=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function N(e,n){return!n||"object"!==D(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function F(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var I=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&K(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=T(n);if(F()){var o=T(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return N(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this,"biomeCanvas",512,"200px")}return t=i,(o=[{key:"generateTexture",value:function(e){this.waterLevel=e.waterLevel;var n=this.randRange(0,1),t=this.randRange(0,.7),o=this.randRange(0,.6);this.baseColor=(new g.Color).setHSL(n,t,o),this.colorAngle=this.randRange(.2,.4),this.saturationRange=this.randRange(.3,.5),this.lightnessRange=this.randRange(.3,.5),this.circleSize=this.randRange(30,250),this.drawBase(),this.drawCircles(),this.drawDetail(),this.drawInland(),this.drawBeach(),this.drawWater(),this.texture=new g.CanvasTexture(this.canvas)}},{key:"drawCircles",value:function(){for(var e=Math.round(this.randRange(50,150)),n=0;n<e;++n)this.randomGradientCircle()}},{key:"drawBase",value:function(){this.fillBaseColor();for(var e=Math.round(this.randRange(5,10)),n=0;n<e;++n){var t=this.randRange(0,this.width),o=this.randRange(0,this.height),r=this.randRange(0,this.width),a=this.randRange(0,this.height),i=Math.abs(r-t),s=Math.abs(a-o);this.randomGradientRect(0,0,this.width,this.height),this.randomGradientRect(t,o,i,s)}}},{key:"drawDetail",value:function(){for(var e=Math.round(this.randRange(5,35)),n=0;n<e;++n){var t=this.randRange(0,this.width),o=this.randRange(0,this.height),r=this.randRange(0,this.width),a=this.randRange(0,this.height),i=Math.abs(r-t),s=Math.abs(a-o);this.randomGradientStrip(0,0,this.width,this.height),this.randomGradientStrip(t,o,i,s)}}},{key:"drawRivers",value:function(){var e=this.randomColor();this.ctx.strokeStyle="rgba("+e.r+", "+e.g+", "+e.b+", 0.5)";for(var n=this.randRange(0,this.width),t=this.randRange(0,this.height),o=n,r=t,a=Math.round(this.randRange(5,35)),i=0;i<a;++i)n=this.randRange(0,this.width),t=this.randRange(0,this.height),this.ctx.moveTo(o,r),this.ctx.lineTo(n,t),this.ctx.stroke(),o=n,r=t}},{key:"randomCircle",value:function(){var e=this.randRange(0,this.width),n=this.randRange(0,this.height),t=this.randRange(2,15),o=this.randomColor();this.ctx.fillStyle="rgba("+o.r+", "+o.g+", "+o.b+", 0.5)",this.ctx.beginPath(),this.ctx.arc(e,n,t,0,2*Math.PI),this.ctx.fill()}},{key:"randomGradientStrip",value:function(e,n,t,o){var r=this.randRange(0,this.width),a=this.randRange(0,this.height),i=this.randRange(0,this.width),s=this.randRange(0,this.height),c=this.ctx.createLinearGradient(r,a,i,s),l=this.randomColor();c.addColorStop(this.randRange(0,.5),"rgba("+l.r+", "+l.g+", "+l.b+", 0.0)"),c.addColorStop(.5,"rgba("+l.r+", "+l.g+", "+l.b+", 0.8)"),c.addColorStop(this.randRange(.5,1),"rgba("+l.r+", "+l.g+", "+l.b+", 0.0)"),this.ctx.fillStyle=c,this.ctx.fillRect(e,n,t,o)}},{key:"blackWhiteGradient",value:function(){var e=this.width,n=this.height,t=this.ctx.createLinearGradient(0,0,e,n);t.addColorStop(0,"rgba(255, 255, 255, 1.0)"),t.addColorStop(1,"rgba(0, 0, 0, 1.0)"),this.ctx.fillStyle=t,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"fillBaseColor",value:function(){this.ctx.fillStyle=this.toCanvasColor(this.baseColor),this.ctx.fillRect(0,0,this.width,this.height)}},{key:"randomGradientRect",value:function(e,n,t,o){var r=this.randRange(0,this.width),a=this.randRange(0,this.height),i=this.randRange(0,this.width),s=this.randRange(0,this.height),c=this.ctx.createLinearGradient(r,a,i,s),l=this.randomColor();c.addColorStop(0,"rgba("+l.r+", "+l.g+", "+l.b+", 0.0)"),c.addColorStop(1,"rgba("+l.r+", "+l.g+", "+l.b+", 1.0)"),this.ctx.fillStyle=c,this.ctx.fillRect(e,n,t,o)}},{key:"drawWater",value:function(){var e=this.height-this.height*this.waterLevel,n=this.height,t=this.ctx.createLinearGradient(0,e,0,n),o=this.randomWaterColor();t.addColorStop(0,"rgba("+Math.round(1.3*o.r)+", "+Math.round(1.3*o.g)+", "+Math.round(1.3*o.b)+", 0.9)"),t.addColorStop(.2,"rgba("+Math.round(1*o.r)+", "+Math.round(1*o.g)+", "+Math.round(1*o.b)+", 0.9)"),t.addColorStop(.8,"rgba("+Math.round(.7*o.r)+", "+Math.round(.7*o.g)+", "+Math.round(.7*o.b)+", 0.9)"),this.ctx.fillStyle=t,this.ctx.fillRect(0,e,this.width,this.height)}},{key:"drawBeach",value:function(){var e=Math.round(this.randRange(5,12)),n=this.height-this.height*this.waterLevel-e,t=this.height-this.height*this.waterLevel,o=this.ctx.createLinearGradient(0,n,0,t),r=this.randomColor();o.addColorStop(0,"rgba("+Math.round(1*r.r)+", "+Math.round(1*r.g)+", "+Math.round(1*r.b)+", 0)"),o.addColorStop(1,"rgba("+Math.round(1*r.r)+", "+Math.round(1*r.g)+", "+Math.round(1*r.b)+", 0.3)"),this.ctx.fillStyle=o,this.ctx.fillRect(0,n,this.width,e)}},{key:"drawInland",value:function(){var e=Math.round(this.randRange(75,125)),n=this.height-this.height*this.waterLevel-e,t=this.height-this.height*this.waterLevel,o=this.ctx.createLinearGradient(0,n,0,t),r=this.randomColor();o.addColorStop(0,"rgba("+Math.round(1*r.r)+", "+Math.round(1*r.g)+", "+Math.round(1*r.b)+", 0)"),o.addColorStop(1,"rgba("+Math.round(1*r.r)+", "+Math.round(1*r.g)+", "+Math.round(1*r.b)+", 0.5)"),this.ctx.fillStyle=o,this.ctx.fillRect(0,n,this.width,e)}},{key:"randomGradientCircle",value:function(){var e=this.randRange(0,this.width),n=this.randRange(0,this.height)-this.height*this.waterLevel,t=e,o=n,r=this.randRange(10,this.circleSize),a=this.ctx.createRadialGradient(e,n,0,t,o,r),i=this.randomColor();a.addColorStop(0,"rgba("+i.r+", "+i.g+", "+i.b+", 1.0)"),a.addColorStop(1,"rgba("+i.r+", "+i.g+", "+i.b+", 0.0)"),this.ctx.fillStyle=a,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"randomWaterColor",value:function(){var e=this.baseColor.clone(),n=0,t=this.randRange(0,1);n=t<.33?0+this.randRange(-.1,.1):t<.66?this.colorAngle+this.randRange(-.1,.1):-this.colorAngle+this.randRange(-.1,.1);var o=e.getHSL();return o.h+=n,o.s=this.randRange(0,.6),o.l=this.randRange(.1,.4),e.setHSL(o.h,o.s,o.l),{r:Math.round(255*e.r),g:Math.round(255*e.g),b:Math.round(255*e.b)}}},{key:"randomColor",value:function(){var e=this.baseColor.clone(),n=0,t=this.randRange(0,1);n=t<.33?0+this.randRange(-.1,.1):t<.66?this.colorAngle+this.randRange(-.1,.1):-this.colorAngle+this.randRange(-.1,.1);var o=this.randRange(-this.saturationRange,this.saturationRange),r=this.randRange(-this.lightnessRange,this.lightnessRange),a=e.getHSL();return a.h+=n,a.s+=o,a.l+=r,a.l<0&&(a.l=.3*Math.abs(a.l)),e.setHSL(a.h,a.s,a.l),{r:Math.round(255*e.r),g:Math.round(255*e.g),b:Math.round(255*e.b)}}}])&&L(t.prototype,o),r&&L(t,r),i}(k),G=t("qRcc"),E=t.n(G),A=t("Gsp3"),B=t.n(A);function q(e){return(q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function U(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function V(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function W(e,n){return(W=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function H(e,n){return!n||"object"!==q(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Y(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Q(e){return(Q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Z=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&W(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=Q(n);if(Y()){var o=Q(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return H(this,e)});function i(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1010;return U(this,i),(e=a.call(this)).radius=n,e.time=0,e.params={visible:!0,speed:.1,color:new g.Color(65535),opacity:.31,atmo1:.5,atmo2:.5,atmo3:1,atmo4:.25,atmo5:.01},e.material=new g.ShaderMaterial({uniforms:{time:{type:"f",value:e.time},atmo1:{type:"f",value:e.params.atmo1},atmo2:{type:"f",value:e.params.atmo2},atmo3:{type:"f",value:e.params.atmo3},atmo4:{type:"f",value:e.params.atmo4},atmo5:{type:"f",value:e.params.atmo5},alpha:{type:"f",value:e.params.opacity},color:{type:"c",value:e.params.color}},vertexShader:E.a,fragmentShader:B.a,transparent:!0,blending:g.AdditiveBlending}),e.geometry=new g.IcosahedronBufferGeometry(e.radius,6),e.sphere=new g.Mesh(e.geometry,e.material),e.add(e.sphere),e.createControls(),e}return t=i,(o=[{key:"createControls",value:function(){var e=this,n=window.gui.addFolder("Atmosphere");n.add(this.params,"visible").onChange((function(n){e.sphere.visible=n,e.updateMaterial()})),n.addColor(new _(this.params,"color"),"color").onChange((function(n){e.updateMaterial()})),n.add(this.params,"opacity",0,1).step(.01).onChange((function(n){e.updateMaterial()}));for(var t=["atmo1","atmo2","atmo3","atmo4","atmo4"],o=0;o<t.length;++o)n.add(this.params,t[o],0,3).step(.01).onChange((function(n){e.updateMaterial()}))}},{key:"update",value:function(){this.time+=this.params.speed}},{key:"updateMaterial",value:function(){this.material.uniforms.time.value=this.time,this.material.uniforms.atmo1.value=this.params.atmo1,this.material.uniforms.atmo2.value=this.params.atmo2,this.material.uniforms.atmo3.value=this.params.atmo3,this.material.uniforms.atmo4.value=this.params.atmo4,this.material.uniforms.atmo5.value=this.params.atmo5,this.material.uniforms.alpha.value=this.params.opacity,this.material.uniforms.color.value=this.params.color}},{key:"randRange",value:function(e,n){var t=n-e;return e+window.rng()*t}},{key:"randomizeColor",value:function(){this.params.color.setRGB(this.randRange(.5,1),this.randRange(.5,1),this.randRange(.5,1)),this.updateMaterial()}},{key:"randomize",value:function(){this.params.atmo1=this.randRange(0,1),this.params.atmo2=this.randRange(0,1),this.params.atmo3=this.randRange(0,1),this.params.atmo4=this.randRange(0,1),this.params.atmo5=this.randRange(.1,2),this.randomizeColor()}}])&&V(t.prototype,o),r&&V(t,r),i}(g.Object3D);function $(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var X=function(){function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.materials=[],this.maps=[],this.textures=[],this.textureCameras=[],this.textureScenes=[],this.planes=[],this.geometries=[],this.setupMaterials();for(var n=0;n<6;++n)this.textures.push(new g.WebGLRenderTarget(1024,1024,{minFilter:g.LinearFilter,magFilter:g.LinearFilter,format:g.RGBAFormat})),this.textureCameras.push(new g.OrthographicCamera(-512,512,512,-512,-100,100)),this.textureCameras[n].position.z=10,this.textureScenes.push(new g.Scene),this.geometries.push(new g.PlaneGeometry(1,1)),this.planes.push(new g.Mesh(this.geometries[n],this.materials[n])),this.planes[n].position.z=-10,this.textureScenes[n].add(this.planes[n]),this.maps.push(this.textures[n].texture)}var n,t,o;return n=e,(t=[{key:"visible",value:function(e){for(var n=0;n<6;++n)this.geometries[n]=e}},{key:"setupMaterials",value:function(){}},{key:"updateMaterials",value:function(e){}},{key:"render",value:function(e){var n=this;this.updateMaterials(e);for(var t=e.resolution,o=function(e){window.renderQueue.addAction((function(){n.textures[e].setSize(t,t),n.textures[e].needsUpdate=!0,n.textureCameras[e].left=-t/2,n.textureCameras[e].right=t/2,n.textureCameras[e].top=t/2,n.textureCameras[e].bottom=-t/2,n.textureCameras[e].updateProjectionMatrix(),n.geometries[e]=new g.PlaneGeometry(t,t),n.planes[e].geometry=n.geometries[e],window.renderer.render(n.textureScenes[e],n.textureCameras[e],n.textures[e],!0),n.geometries[e].dispose()}))},r=0;r<6;++r)o(r)}}])&&$(n.prototype,t),o&&$(n,o),e}(),J=t("7txM"),ee=t.n(J),ne=t("VWZf"),te=t.n(ne);function oe(e){return(oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function re(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function ae(e,n){return(ae=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function ie(e,n){return!n||"object"!==oe(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function se(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function ce(e){return(ce=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var le=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&ae(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=ce(n);if(se()){var o=ce(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return ie(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this)}return t=i,(o=[{key:"setupMaterials",value:function(){this.materials=[];for(var e=0;e<6;++e)this.materials.push(new g.ShaderMaterial({uniforms:{index:{type:"i",value:e},seed:{type:"f",value:0},resolution:{type:"f",value:0},res1:{type:"f",value:0},res2:{type:"f",value:0},resMix:{type:"f",value:0},mixScale:{type:"f",value:0},ridgesType:{type:"i",value:0}},vertexShader:ee.a,fragmentShader:te.a,transparent:!0,depthWrite:!1}))}},{key:"updateMaterials",value:function(e){for(var n=0;n<6;++n)this.materials[n].uniforms.seed.value=e.seed,this.materials[n].uniforms.resolution.value=e.resolution,this.materials[n].uniforms.res1.value=e.res1,this.materials[n].uniforms.res2.value=e.res2,this.materials[n].uniforms.resMix.value=e.resMix,this.materials[n].uniforms.mixScale.value=e.mixScale,this.materials[n].uniforms.ridgesType.value=e.ridgesType,this.materials[n].needsUpdate=!0}}])&&re(t.prototype,o),r&&re(t,r),i}(X),fe=t("6CdQ"),ue=t.n(fe);function de(e){return(de="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ve(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function pe(e,n){return(pe=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function ge(e,n){return!n||"object"!==de(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function he(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function ye(e){return(ye=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var me=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&pe(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=ye(n);if(he()){var o=ye(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return ge(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this)}return t=i,(o=[{key:"setupMaterials",value:function(){this.materials=[];for(var e=0;e<6;++e)this.materials.push(new g.ShaderMaterial({uniforms:{biomeMap:{type:"t",value:new g.Texture},heightMap:{type:"t",value:new g.Texture},moistureMap:{type:"t",value:new g.Texture},waterLevel:{type:"f",value:0},waterColor:{type:"c",value:new g.Color(0,.4,.9)}},vertexShader:ee.a,fragmentShader:ue.a,transparent:!0,depthWrite:!1}))}},{key:"updateMaterials",value:function(e){for(var n=0;n<6;++n)this.materials[n].uniforms.heightMap.value=e.heightMaps[n],this.materials[n].uniforms.moistureMap.value=e.moistureMaps[n],this.materials[n].uniforms.biomeMap.value=e.biomeMap,this.materials[n].uniforms.waterLevel.value=e.waterLevel,this.materials[n].uniforms.waterColor.value=e.waterColor,this.materials[n].needsUpdate=!0}}])&&ve(t.prototype,o),r&&ve(t,r),i}(X),xe=t("SQyz"),we=t.n(xe),be=t("k2iR"),ze=t.n(be);function Pe(e){return(Pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Se(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Ce(e,n){return(Ce=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Me(e,n){return!n||"object"!==Pe(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Re(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function _e(e){return(_e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var je=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Ce(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=_e(n);if(Re()){var o=_e(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return Me(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this)}return t=i,(o=[{key:"setupMaterials",value:function(){this.materials=[];for(var e=0;e<6;++e)this.materials.push(new g.ShaderMaterial({uniforms:{resolution:{type:"f",value:0},waterLevel:{type:"f",value:0},heightMap:{type:"t",value:new g.Texture},textureMap:{type:"t",value:new g.Texture}},vertexShader:we.a,fragmentShader:ze.a,transparent:!0,depthWrite:!1}))}},{key:"updateMaterials",value:function(e){for(var n=0;n<6;++n)this.materials[n].uniforms.resolution.value=e.resolution,this.materials[n].uniforms.waterLevel.value=e.waterLevel,this.materials[n].uniforms.heightMap.value=e.heightMaps[n],this.materials[n].uniforms.textureMap.value=e.textureMaps[n],this.materials[n].needsUpdate=!0}}])&&Se(t.prototype,o),r&&Se(t,r),i}(X),Oe=t("l8Vw"),ke=t.n(Oe);function De(e){return(De="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Ke(e,n){return(Ke=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Ne(e,n){return!n||"object"!==De(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Fe(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Te(e){return(Te=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Ie=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Ke(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=Te(n);if(Fe()){var o=Te(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return Ne(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this)}return t=i,(o=[{key:"setupMaterials",value:function(){this.materials=[];for(var e=0;e<6;++e)this.materials.push(new g.ShaderMaterial({uniforms:{resolution:{type:"f",value:0},waterLevel:{type:"f",value:0},heightMap:{type:"t",value:new g.Texture}},vertexShader:ee.a,fragmentShader:ke.a,transparent:!0,depthWrite:!1}))}},{key:"updateMaterials",value:function(e){for(var n=0;n<6;++n)this.materials[n].uniforms.resolution.value=e.resolution,this.materials[n].uniforms.waterLevel.value=e.waterLevel,this.materials[n].uniforms.heightMap.value=e.heightMaps[n],this.materials[n].needsUpdate=!0}}])&&Le(t.prototype,o),r&&Le(t,r),i}(X),Ge=t("a6jw"),Ee=t.n(Ge);function Ae(e){return(Ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Be(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function qe(e,n){return(qe=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Ue(e,n){return!n||"object"!==Ae(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Ve(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function We(e){return(We=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var He=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&qe(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=We(n);if(Ve()){var o=We(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return Ue(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this)}return t=i,(o=[{key:"setupMaterials",value:function(){this.materials=[];for(var e=0;e<6;++e)this.materials.push(new g.ShaderMaterial({uniforms:{index:{type:"i",value:e},seed:{type:"f",value:0},resolution:{type:"f",value:0},res1:{type:"f",value:0},res2:{type:"f",value:0},resMix:{type:"f",value:0},mixScale:{type:"f",value:0}},vertexShader:ee.a,fragmentShader:Ee.a,transparent:!0,depthWrite:!1}))}},{key:"updateMaterials",value:function(e){for(var n=0;n<6;++n)this.materials[n].uniforms.seed.value=e.seed,this.materials[n].uniforms.resolution.value=e.resolution,this.materials[n].uniforms.res1.value=e.res1,this.materials[n].uniforms.res2.value=e.res2,this.materials[n].uniforms.resMix.value=e.resMix,this.materials[n].uniforms.mixScale.value=e.mixScale,this.materials[n].needsUpdate=!0}}])&&Be(t.prototype,o),r&&Be(t,r),i}(X);t("Zss7");function Ye(e){return(Ye="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Qe(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Ze(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function $e(e,n){return($e=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Xe(e,n){return!n||"object"!==Ye(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Je(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function en(e){return(en=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var nn=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&$e(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=en(n);if(Je()){var o=en(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return Xe(this,e)});function i(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1005;Qe(this,i),(e=a.call(this)).radius=n,e.resolution=1024,e.params={visible:!0,rotate:!0,rotationSpeed:9e-4,color:new g.Color(16777215),opacity:1,roughness:.9,metalness:.5,bumpScale:1},e.cloudMap=new He,e.cloudMaps=e.cloudMap.maps,e.materials=[];for(var t=0;t<6;++t)e.materials.push(new g.MeshStandardMaterial({color:e.params.color,transparent:!0,roughness:e.params.roughness,metalness:e.params.metalness,opacity:e.params.opacity,bumpScale:e.params.bumpScale}));for(var o in e.geometry=new g.BoxGeometry(1,1,1,64,64,64),e.geometry.vertices)e.geometry.vertices[o].normalize().multiplyScalar(e.radius);return e.computeGeometry(e.geometry),e.sphere=new g.Mesh(e.geometry,e.materials),e.add(e.sphere),e.createControls(),e}return t=i,(o=[{key:"createControls",value:function(){var e=this,n=window.gui.addFolder("Clouds");n.add(this.params,"visible").onChange((function(n){e.sphere.visible=n})),n.add(this.params,"rotate"),n.add(this.params,"rotationSpeed",-.02,.02);for(var t=["opacity","roughness","bumpScale"],o=0;o<t.length;++o)n.add(this.params,t[o],0,1).step(.001).onChange((function(n){e.updateMaterial()}));n.addColor(new _(this.params,"color"),"color").onChange((function(n){e.updateMaterial()}))}},{key:"update",value:function(){this.params.rotate&&(this.rotation.y+=this.params.rotationSpeed,this.rotation.z+=1e-4)}},{key:"render",value:function(e){this.seed=this.randRange(0,1e3),this.updateMaterial(),this.cloudMap.render({seed:this.seed,resolution:this.resolution,res1:this.randRange(.1,1),res2:this.randRange(.1,1),resMix:this.randRange(.1,1),mixScale:this.randRange(.1,1)})}},{key:"map_range",value:function(e,n,t,o,r){return o+(r-o)*(e-n)/(t-n)}},{key:"updateMaterial",value:function(){for(var e=0;e<6;++e){var n=this.materials[e];n.roughness=this.params.roughness,n.metalness=this.params.metalness,n.opacity=this.params.opacity,n.bumpScale=this.params.bumpScale,n.color=this.params.color,n.map=this.cloudMaps[e],n.alphaMap=this.cloudMaps[e],n.bumpMap=this.cloudMaps[e]}}},{key:"randRange",value:function(e,n){var t=n-e;return e+window.rng()*t}},{key:"randomizeColor",value:function(){this.params.color.setRGB(this.randRange(.5,1),this.randRange(.5,1),this.randRange(.5,1)),this.updateMaterial()}},{key:"randomize",value:function(){this.params.opacity=this.randRange(.25,1),this.randomizeColor()}},{key:"computeGeometry",value:function(e){e.computeVertexNormals(),e.computeFaceNormals(),e.computeMorphNormals(),e.computeBoundingSphere(),e.computeBoundingBox(),e.verticesNeedUpdate=!0,e.elementsNeedUpdate=!0,e.uvsNeedUpdate=!0,e.normalsNeedUpdate=!0,e.colorsNeedUpdate=!0,e.lineDistancesNeedUpdate=!0,e.groupsNeedUpdate=!0}}])&&Ze(t.prototype,o),r&&Ze(t,r),i}(g.Object3D),tn=t("uEp1"),on=t.n(tn),rn=t("uxjU"),an=t.n(rn);function sn(e){return(sn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function cn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function ln(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function fn(e,n){return(fn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function un(e,n){return!n||"object"!==sn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function dn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function vn(e){return(vn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var pn=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&fn(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=vn(n);if(dn()){var o=vn(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return un(this,e)});function i(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1030;return cn(this,i),(e=a.call(this)).radius=n,e.params={visible:!0,color:new g.Color(5636095),glow:1,c:.41,p:1.7},e.material=new g.ShaderMaterial({uniforms:{c:{type:"f",value:e.params.c},p:{type:"f",value:e.params.p},glowColor:{type:"c",value:e.params.color},viewVector:{type:"v3",value:new g.Vector3(window.camera.position)}},vertexShader:on.a,fragmentShader:an.a}),e.material.transparent=!0,e.material.blending=g.AdditiveBlending,e.material.side=g.BackSide,e.geometry=new g.IcosahedronBufferGeometry(e.radius,6),e.sphere=new g.Mesh(e.geometry,e.material),e.add(e.sphere),e.createControls(),e}return t=i,(o=[{key:"createControls",value:function(){var e=this,n=window.gui.addFolder("Glow");n.add(this.params,"visible").onChange((function(n){e.sphere.visible=n})),n.add(this.params,"glow",0,1).step(.01).onChange((function(n){e.updateMaterial()})),n.addColor(new _(this.params,"color"),"color").onChange((function(n){e.updateMaterial()})),n.add(this.params,"c",0,1).step(.01).onChange((function(n){e.updateMaterial()})),n.add(this.params,"p",0,6).step(.01).onChange((function(n){e.updateMaterial()}))}},{key:"update",value:function(){this.material.uniforms.viewVector.value.subVectors(window.camera.position,this.sphere.position)}},{key:"updateMaterial",value:function(){this.material.uniforms.c.value=this.params.c,this.material.uniforms.p.value=this.params.p,this.material.uniforms.glowColor.value=this.params.color}},{key:"randRange",value:function(e,n){var t=n-e;return e+window.rng()*t}},{key:"randomizeColor",value:function(){this.params.color.setRGB(this.randRange(.2,.8),this.randRange(.2,.8),this.randRange(.2,.8)),this.updateMaterial()}},{key:"randomize",value:function(){this.params.glow=this.randRange(.25,1),this.randomizeColor()}}])&&ln(t.prototype,o),r&&ln(t,r),i}(g.Object3D),gn=t("10kV"),hn=t.n(gn),yn=t("PP0w"),mn=t.n(yn);function xn(e){return(xn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function wn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function bn(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function zn(e,n){return(zn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Pn(e,n){return!n||"object"!==xn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Sn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Cn(e){return(Cn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Mn=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&zn(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=Cn(n);if(Sn()){var o=Cn(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return Pn(this,e)});function i(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1030;return wn(this,i),(e=a.call(this)).radius=n,e.params={visible:!0,color:new g.Color(.72,.27,.35),Kr:.0025,Km:.001,ESun:20,g:-.95,innerRadius:1e3,outerRadius:e.radius,wavelength:[.65,.57,.475],scaleDepth:.25,mieScaleDepth:.1},e.material=new g.ShaderMaterial({uniforms:{v3LightPosition:{type:"v3",value:new g.Vector3(-1,1,1)},v3InvWavelength:{type:"v3",value:new g.Vector3(1/Math.pow(e.params.wavelength[0],4),1/Math.pow(e.params.wavelength[1],4),1/Math.pow(e.params.wavelength[2],4))},fCameraHeight:{type:"f",value:0},fCameraHeight2:{type:"f",value:0},fInnerRadius:{type:"f",value:e.params.innerRadius},fInnerRadius2:{type:"f",value:e.params.innerRadius*e.params.innerRadius},fOuterRadius:{type:"f",value:e.params.outerRadius},fOuterRadius2:{type:"f",value:e.params.outerRadius*e.params.outerRadius},fKrESun:{type:"f",value:e.params.Kr*e.params.ESun},fKmESun:{type:"f",value:e.params.Km*e.params.ESun},fKr4PI:{type:"f",value:4*e.params.Kr*Math.PI},fKm4PI:{type:"f",value:4*e.params.Km*Math.PI},fScale:{type:"f",value:1/(e.params.outerRadius-e.params.innerRadius)},fScaleDepth:{type:"f",value:e.params.scaleDepth},fScaleOverScaleDepth:{type:"f",value:1/(e.params.outerRadius-e.params.innerRadius)/e.params.scaleDepth},g:{type:"f",value:e.params.g},g2:{type:"f",value:e.params.g*e.params.g},nSamples:{type:"i",value:3},fSamples:{type:"f",value:3},atmosphereColor:{type:"v3",value:new g.Vector4(e.params.color.r,e.params.color.g,e.params.color.b,1)},tDisplacement:{type:"t",value:0},tSkyboxDiffuse:{type:"t",value:0},fNightScale:{type:"f",value:1},level:{type:"f",value:window.camera.position.length()}},vertexShader:hn.a,fragmentShader:mn.a,transparent:!0,side:g.BackSide}),e.geometry=new g.IcosahedronGeometry(e.radius,6),e.sphere=new g.Mesh(e.geometry,e.material),e.add(e.sphere),e.createControls(),e}return t=i,(o=[{key:"createControls",value:function(){var e=this,n=window.gui.addFolder("Atmosphere Ring");n.add(this.params,"visible").onChange((function(n){e.sphere.visible=n})),n.addColor(new _(this.params,"color"),"color").onChange((function(n){e.updateMaterial()}));for(var t=["Kr","Km","scaleDepth","mieScaleDepth"],o=0;o<t.length;++o)n.add(this.params,t[o],0,1).step(.001).onChange((function(n){e.updateMaterial()}));n.add(this.params,"g",-1,1).step(.001).onChange((function(n){e.updateMaterial()})),n.add(this.params,"ESun",-100,100).step(.001).onChange((function(n){e.updateMaterial()}))}},{key:"update",value:function(){this.updateMaterial()}},{key:"updateMaterial",value:function(){this.material.uniforms.atmosphereColor.value.set(this.params.color.r,this.params.color.g,this.params.color.b,1),this.material.uniforms.fKrESun.value=this.params.Kr*this.params.ESun,this.material.uniforms.fKmESun.value=this.params.Km*this.params.ESun,this.material.uniforms.fKr4PI.value=4*this.params.Kr*Math.PI,this.material.uniforms.fKm4PI.value=4*this.params.Km*Math.PI,this.material.uniforms.fScaleDepth.value=this.params.scaleDepth,this.material.uniforms.fScaleOverScaleDepth.value=1/(this.params.outerRadius-this.params.innerRadius)/this.params.scaleDepth,this.material.uniforms.g.value=this.params.g,this.material.uniforms.g2.value=this.params.g*this.params.g;var e=window.camera.position.length();this.material.uniforms.fCameraHeight.value=e,this.material.uniforms.fCameraHeight2.value=e*e,this.material.uniforms.v3InvWavelength.value=new g.Vector3(1/Math.pow(this.params.color.r,4),1/Math.pow(this.params.color.g,4),1/Math.pow(this.params.color.b,4)),this.material.uniforms.level.value=window.camera.position.distanceTo(new g.Vector3(0,0,0))}},{key:"randRange",value:function(e,n){var t=n-e;return e+window.rng()*t}},{key:"randomizeColor",value:function(){this.params.color.setRGB(this.randRange(.3,1),this.randRange(.3,1),this.randRange(.3,1)),this.updateMaterial()}},{key:"randomize",value:function(){this.randomizeColor()}}])&&bn(t.prototype,o),r&&bn(t,r),i}(g.Object3D);function Rn(e){return(Rn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _n(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function jn(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function On(e,n){return(On=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function kn(e,n){return!n||"object"!==Rn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Dn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Ln(e){return(Ln=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Kn=new g.Color(0,.4,.9),Nn=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&On(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=Ln(n);if(Dn()){var o=Ln(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return kn(this,e)});function i(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3;return _n(this,i),(e=a.call(this)).radius=n,e.materials=[],e.resolution=1024,e.heightMaps=[],e.moistureMaps=[],e.textureMaps=[],e.normalMaps=[],e.roughnessMaps=[],e.params={rotate:!0,rotationSpeed:5e-4,waterLevel:.2,waterColor:Kn.clone(),roughness:.8,metalness:.5,normalScale:4.14,bumpScale:1,displacementScale:1,displayMap:"textureMap",showBiomeMap:!1},e.createInnerPlanet(),e.createOuterPlanet(),e.createControls(),e}return t=i,(o=[{key:"randomWaterColor",value:function(){var e=new g.Color,n=Kn.getHSL();return e.setHSL(n.h,n.s+.4*window.rng()-.2,n.l+.4*window.rng()-.2),e}},{key:"createInnerPlanet",value:function(){this.biome=new I,this.heightMap=new le,this.heightMaps=this.heightMap.maps,this.moistureMap=new le,this.moistureMaps=this.moistureMap.maps,this.textureMap=new me,this.textureMaps=this.textureMap.maps,this.normalMap=new je,this.normalMaps=this.normalMap.maps,this.roughnessMap=new Ie,this.roughnessMaps=this.roughnessMap.maps,this.materials=[];for(var e=0;e<6;++e)this.materials.push(new g.MeshStandardMaterial({color:new g.Color(16777215)}));for(var n in this.geometry=new g.BoxGeometry(1,1,1,64,64,64),this.geometry.vertices)this.geometry.vertices[n].normalize().multiplyScalar(this.radius);this.computeGeometry(this.geometry),this.ground=new g.Mesh(this.geometry,this.materials),this.add(this.ground)}},{key:"createOuterPlanet",value:function(){this.clouds=new nn,this.add(this.clouds),this.atmosphere=new Z,this.add(this.atmosphere),this.atmosphereRing=new Mn,this.add(this.atmosphereRing),this.glow=new pn,this.add(this.glow)}},{key:"createControls",value:function(){var e=this,n=gui.addFolder("Planet");n.add(this.params,"rotate"),n.add(this.params,"rotationSpeed",-.01,.01),n.add(this.params,"waterLevel",0,1).onChange((function(n){e.updateTexture()})),n.addColor(new _(this.params,"waterColor"),"color").onChange((function(n){e.updateTexture()}));for(var t=["roughness","metalness","bumpScale","displacementScale"],o=0;o<t.length;++o)n.add(this.params,t[o],0,1).onChange((function(n){e.updateMaterial()}));n.add(this.params,"normalScale",-6,6).onChange((function(n){e.updateMaterial()})),n.add(this.params,"displayMap",["textureMap","heightMap","moistureMap","normalMap","roughnessMap"]).onChange((function(n){e.updateMaterial()})),n.add(this.params,"showBiomeMap").onChange((function(n){e.biome&&e.biome.visibleCanvas(n)}))}},{key:"update",value:function(){this.params.rotate&&(this.ground.rotation.y+=this.params.rotationSpeed,this.clouds.update()),this.atmosphere.update(),this.atmosphereRing.update(),this.glow.update()}},{key:"renderUI",value:function(){}},{key:"updateTexture",value:function(){this.textureMap.render({resolution:this.resolution,heightMaps:this.heightMaps,moistureMaps:this.moistureMaps,biomeMap:this.biome.texture,waterLevel:this.params.waterLevel,waterColor:this.params.waterColor}),this.updateMaterial()}},{key:"render",value:function(){var e=this;this.seed=1e3*this.randRange(0,1),this.params.waterLevel=this.randRange(.1,.5);var n=this.randomWaterColor();this.params.waterColor.setRGB(n.r,n.g,n.b),this.clouds.resolution=this.resolution,this.updateNormalScaleForRes(this.resolution),this.biome.generateTexture({waterLevel:this.params.waterLevel}),this.clouds.randomize(),this.atmosphere.randomize(),this.atmosphereRing.randomize(),this.glow.randomize();var t=.01,o=5;this.updateMaterial(),this.heightMap.render({seed:this.seed,resolution:this.resolution,res1:this.randRange(t,o),res2:this.randRange(t,o),resMix:this.randRange(t,o),mixScale:this.randRange(.5,1),ridgesType:Math.floor(this.randRange(0,4))}),this.textureMap.render({resolution:this.resolution,heightMaps:this.heightMaps,moistureMaps:this.moistureMaps,biomeMap:this.biome.texture,waterLevel:this.params.waterLevel,waterColor:this.params.waterColor}),this.roughnessMap.render({resolution:this.resolution,heightMaps:this.heightMaps,waterLevel:this.params.waterLevel});var r=this.randRange(2,5);o*=r,t*=r,this.moistureMap.render({seed:this.seed*this.seed,resolution:this.resolution,res1:this.randRange(t,o),res2:this.randRange(t,o),resMix:this.randRange(t,o),mixScale:this.randRange(.5,1),ridgesType:Math.floor(this.randRange(0,4))}),this.normalMap.render({resolution:this.resolution,waterLevel:this.params.waterLevel,heightMaps:this.heightMaps,textureMaps:this.textureMaps}),this.clouds.render({waterLevel:this.params.waterLevel}),window.renderQueue.addCallback((function(){e.updateMaterial()}))}},{key:"updateMaterial",value:function(){for(var e=0;e<6;++e){var n=this.materials[e];n.roughness=this.params.roughness,n.metalness=this.params.metalness,n.normalScale=new g.Vector2(this.params.normalScale,this.params.normalScale),n.bumpScale=this.params.bumpScale,n.displacementScale=this.params.displacementScale,n.map=null,n.normalMap=null,n.roughnessMap=null,n.metalnessMap=null,n.displacementMap=null,n.bumpMap=null,"textureMap"===this.params.displayMap?(n.map=this.textureMaps[e],n.normalMap=this.normalMaps[e],n.roughnessMap=this.roughnessMaps[e],n.metalnessMap=this.moistureMaps[e],n.displacementMap=this.normalMap[e],n.bumpMap=this.roughnessMap[e]):"heightMap"===this.params.displayMap?n.map=this.heightMaps[e]:"moistureMap"===this.params.displayMap?n.map=this.moistureMaps[e]:"normalMap"===this.params.displayMap?n.map=this.normalMaps[e]:"roughnessMap"===this.params.displayMap&&(n.map=this.roughnessMaps[e]),n.needsUpdate=!0}}},{key:"updateNormalScaleForRes",value:function(e){256===e&&(this.params.normalScale=.25),512===e&&(this.params.normalScale=.5),1024===e&&(this.params.normalScale=1),2048===e&&(this.params.normalScale=1.5),4096===e&&(this.params.normalScale=3)}},{key:"randRange",value:function(e,n){var t=n-e;return e+window.rng()*t}},{key:"computeGeometry",value:function(e){e.computeVertexNormals(),e.computeFaceNormals(),e.computeMorphNormals(),e.computeBoundingSphere(),e.computeBoundingBox(),e.verticesNeedUpdate=!0,e.elementsNeedUpdate=!0,e.uvsNeedUpdate=!0,e.normalsNeedUpdate=!0,e.colorsNeedUpdate=!0,e.lineDistancesNeedUpdate=!0,e.groupsNeedUpdate=!0}},{key:"rotate",get:function(){return this.params.rotate}}])&&jn(t.prototype,o),r&&jn(t,r),i}(g.Object3D),Fn=t("zTiM"),Tn=t.n(Fn);function In(e){return(In="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Gn(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function En(e,n){return(En=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function An(e,n){return!n||"object"!==In(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Bn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function qn(e){return(qn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Un=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&En(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=qn(n);if(Bn()){var o=qn(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return An(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this)}return t=i,(o=[{key:"setupMaterials",value:function(){this.materials=[];for(var e=0;e<6;++e)this.materials.push(new g.ShaderMaterial({uniforms:{index:{type:"i",value:e},seed:{type:"f",value:0},resolution:{type:"f",value:0},res1:{type:"f",value:0},res2:{type:"f",value:0},resMix:{type:"f",value:0},mixScale:{type:"f",value:0},nebulaMap:{type:"t",value:new g.Texture}},vertexShader:ee.a,fragmentShader:Tn.a,transparent:!0,depthWrite:!1}))}},{key:"updateMaterials",value:function(e){for(var n=0;n<6;++n)this.materials[n].uniforms.seed.value=e.seed,this.materials[n].uniforms.resolution.value=e.resolution,this.materials[n].uniforms.res1.value=e.res1,this.materials[n].uniforms.res2.value=e.res2,this.materials[n].uniforms.resMix.value=e.resMix,this.materials[n].uniforms.mixScale.value=e.mixScale,this.materials[n].uniforms.nebulaMap.value=e.nebulaMap,this.materials[n].needsUpdate=!0}}])&&Gn(t.prototype,o),r&&Gn(t,r),i}(X);function Vn(e){return(Vn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Wn(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Hn(e,n){return(Hn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Yn(e,n){return!n||"object"!==Vn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Qn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Zn(e){return(Zn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var $n=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Hn(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=Zn(n);if(Qn()){var o=Zn(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return Yn(this,e)});function i(){var e;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),(e=a.call(this)).resolution=1024,e.radius=5e4,e.params={rotate:!0,rotationSpeed:3e-4,res1:e.randRange(.5,2),res2:e.randRange(.5,2),resMix:e.randRange(.5,2),mixScale:e.randRange(.5,2),opacity:1},e.starMap=new Un,e.starMaps=e.starMap.maps,e.materials=[];for(var n=0;n<6;++n)e.materials.push(new g.MeshBasicMaterial({color:new g.Color(16777215),side:g.BackSide}));for(var t in e.geometry=new g.BoxGeometry(1,1,1,32,32,32),e.geometry.vertices)e.geometry.vertices[t].normalize().multiplyScalar(e.radius);return e.computeGeometry(e.geometry),e.sphere=new g.Mesh(e.geometry,e.materials),e.add(e.sphere),e.createControls(),e}return t=i,(o=[{key:"createControls",value:function(){var e=window.gui.addFolder("Stars");e.add(this.params,"rotate"),e.add(this.params,"rotationSpeed",-.01,.01);for(var n=["res1","res2","resMix","mixScale"],t=0;t<n.length;++t)e.add(this.params,n[t],.5,2).step(.001)}},{key:"update",value:function(){this.params.rotate&&(this.rotation.y+=this.params.rotationSpeed)}},{key:"randRange",value:function(e,n){var t=n-e;return e+window.rng()*t}},{key:"render",value:function(e){this.seed=this.randRange(0,1e3),this.updateMaterial(),this.starMap.render({seed:this.seed,resolution:this.resolution,res1:this.params.res1,res2:this.params.res2,resMix:this.params.resMix,mixScale:this.params.mixScale,nebulaMap:e.nebulaMap})}},{key:"updateMaterial",value:function(){for(var e=0;e<6;++e)this.materials[e].map=this.starMaps[e]}},{key:"computeGeometry",value:function(e){e.computeVertexNormals(),e.computeFaceNormals(),e.computeMorphNormals(),e.computeBoundingSphere(),e.computeBoundingBox(),e.verticesNeedUpdate=!0,e.elementsNeedUpdate=!0,e.uvsNeedUpdate=!0,e.normalsNeedUpdate=!0,e.colorsNeedUpdate=!0,e.lineDistancesNeedUpdate=!0,e.groupsNeedUpdate=!0}}])&&Wn(t.prototype,o),r&&Wn(t,r),i}(g.Object3D),Xn=t("/HNH"),Jn=t.n(Xn);function et(e){return(et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function nt(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function tt(e,n){return(tt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function ot(e,n){return!n||"object"!==et(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function rt(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function at(e){return(at=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var it=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&tt(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=at(n);if(rt()){var o=at(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return ot(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this)}return t=i,(o=[{key:"setupMaterials",value:function(){this.materials=[];for(var e=0;e<6;++e)this.materials.push(new g.ShaderMaterial({uniforms:{index:{type:"i",value:e},seed:{type:"f",value:0},resolution:{type:"f",value:0},res1:{type:"f",value:0},res2:{type:"f",value:0},resMix:{type:"f",value:0},mixScale:{type:"f",value:0},nebulaMap:{type:"t",value:new g.Texture}},vertexShader:ee.a,fragmentShader:Jn.a,transparent:!0,depthWrite:!1}))}},{key:"updateMaterials",value:function(e){for(var n=0;n<6;++n)this.materials[n].uniforms.seed.value=e.seed,this.materials[n].uniforms.resolution.value=e.resolution,this.materials[n].uniforms.res1.value=e.res1,this.materials[n].uniforms.res2.value=e.res2,this.materials[n].uniforms.resMix.value=e.resMix,this.materials[n].uniforms.mixScale.value=e.mixScale,this.materials[n].uniforms.nebulaMap.value=e.nebulaMap,this.materials[n].needsUpdate=!0}}])&&nt(t.prototype,o),r&&nt(t,r),i}(X);function st(e){return(st="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ct(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function lt(e,n){return(lt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function ft(e,n){return!n||"object"!==st(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function ut(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function dt(e){return(dt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var vt=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&lt(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=dt(n);if(ut()){var o=dt(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return ft(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this,"nebulaeCanvas",512,"200px")}return t=i,(o=[{key:"generateTexture",value:function(){var e=this.randRange(0,1),n=this.randRange(.2,.8),t=this.randRange(.2,.6);this.baseColor=(new g.Color).setHSL(e,n,t),this.colorAngle=this.randRange(0,.5),this.fillBaseColor(),this.drawShapes(),this.texture=new g.CanvasTexture(this.canvas)}},{key:"visibleCanvas",value:function(e){this.canvas.style.display=e?"block":"none"}},{key:"fillBaseColor",value:function(){this.ctx.fillStyle=this.toCanvasColor(this.baseColor),this.ctx.fillRect(0,0,this.width,this.height)}},{key:"drawShapes",value:function(){for(var e=Math.round(this.randRange(20,70)),n=0;n<e;++n)this.randomGradientCircle()}},{key:"randomGradientCircle",value:function(){var e=this.randRange(0,this.width),n=this.randRange(0,this.height),t=e,o=n,r=this.randRange(100,200),a=this.ctx.createRadialGradient(e,n,0,t,o,r),i=this.randomColor();a.addColorStop(0,"rgba("+i.r+", "+i.g+", "+i.b+", 1.0)"),a.addColorStop(1,"rgba("+i.r+", "+i.g+", "+i.b+", 0.0)"),this.ctx.fillStyle=a,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"randomColor",value:function(){var e=this.baseColor.clone(),n=0,t=this.randRange(0,1);n=t<.33?0+this.randRange(-.1,.1):t<.66?this.colorAngle+this.randRange(-.1,.1):-this.colorAngle+this.randRange(-.1,.1);var o=this.randRange(-.4,.2),r=this.randRange(-.4,.2);return e.offsetHSL(n,o,r),{r:Math.round(255*e.r),g:Math.round(255*e.g),b:Math.round(255*e.b)}}}])&&ct(t.prototype,o),r&&ct(t,r),i}(k);function pt(e){return(pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function gt(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function ht(e,n){return(ht=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function yt(e,n){return!n||"object"!==pt(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function mt(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function xt(e){return(xt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var wt=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&ht(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=xt(n);if(mt()){var o=xt(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return yt(this,e)});function i(){var e;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),(e=a.call(this)).resolution=1024,e.radius=45e3,e.params={rotate:!0,rotationSpeed:2e-4,res1:e.randRange(1,3),res2:e.randRange(1,3),resMix:e.randRange(1,3),mixScale:e.randRange(1,3),opacity:1,showTextureMap:!1},e.nebulaTexture=new vt,e.skyMap=new it,e.skyMaps=e.skyMap.maps,e.materials=[];for(var n=0;n<6;++n)e.materials.push(new g.MeshBasicMaterial({color:new g.Color(16777215),side:g.BackSide,transparent:!0,opacity:e.params.opacity}));for(var t in e.geometry=new g.BoxGeometry(1,1,1,32,32,32),e.geometry.vertices)e.geometry.vertices[t].normalize().multiplyScalar(e.radius);return e.computeGeometry(e.geometry),e.sphere=new g.Mesh(e.geometry,e.materials),e.add(e.sphere),e.createControls(),e}return t=i,(o=[{key:"createControls",value:function(){var e=this,n=window.gui.addFolder("Nebula");n.add(this.params,"rotate"),n.add(this.params,"rotationSpeed",-.01,.01),n.add(this.params,"opacity",0,1).step(.01).onChange((function(n){e.updateMaterial()}));for(var t=["res1","res2","resMix","mixScale"],o=0;o<t.length;++o)n.add(this.params,t[o],1,3).step(.001);n.add(this.params,"showTextureMap").onChange((function(n){e.nebulaTexture&&e.nebulaTexture.visibleCanvas(n)}))}},{key:"update",value:function(){this.params.rotate&&(this.rotation.y+=this.params.rotationSpeed)}},{key:"generateTexture",value:function(){this.nebulaTexture.generateTexture()}},{key:"render",value:function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0],this.generateTexture(),this.seed=this.randRange(0,1e3),this.updateMaterial(),this.skyMap.render({seed:this.seed,resolution:this.resolution,res1:this.params.res1,res2:this.params.res2,resMix:this.params.resMix,mixScale:this.params.mixScale,nebulaMap:this.nebulaTexture.texture})}},{key:"updateMaterial",value:function(){for(var e=0;e<6;++e){var n=this.materials[e];n.map=this.skyMaps[e],n.opacity=this.params.opacity}}},{key:"randRange",value:function(e,n){var t=n-e;return e+window.rng()*t}},{key:"computeGeometry",value:function(e){e.computeVertexNormals(),e.computeFaceNormals(),e.computeMorphNormals(),e.computeBoundingSphere(),e.computeBoundingBox(),e.verticesNeedUpdate=!0,e.elementsNeedUpdate=!0,e.uvsNeedUpdate=!0,e.normalsNeedUpdate=!0,e.colorsNeedUpdate=!0,e.lineDistancesNeedUpdate=!0,e.groupsNeedUpdate=!0}}])&&gt(t.prototype,o),r&&gt(t,r),i}(g.Object3D);function bt(e){return(bt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function zt(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Pt(e,n){return(Pt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function St(e,n){return!n||"object"!==bt(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Ct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Mt(e){return(Mt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Rt=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Pt(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=Mt(n);if(Ct()){var o=Mt(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return St(this,e)});function i(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),a.call(this,"sunCanvas",1024,"200px")}return t=i,(o=[{key:"generateTexture",value:function(){var e=this.randRange(0,1),n=this.randRange(0,.5),t=this.randRange(.2,.5);this.baseColor=(new g.Color).setHSL(e,n,t),this.baseHue=this.randRange(0,1),this.clear(),this.drawBaseGradient(),this.drawStarGradient(),this.drawBeams(),this.drawHalo(),this.texture=new g.CanvasTexture(this.canvas)}},{key:"drawBaseGradient",value:function(){var e=this.width/2,n=this.width/2,t=this.width/2,o=this.baseHue+this.randRange(-.2,.2),r=.8,a=.1,i=this.ctx.createRadialGradient(e,n,0,e,n,t);this.addColorToGradient(0,{h:o,s:r,l:a,a:.5},i),this.addColorToGradient(.4,{h:o,s:r,l:a,a:.7},i),this.addColorToGradient(.6,{h:o-.05,s:r,l:a,a:.3},i),this.addColorToGradient(.9,{h:o,s:r,l:a,a:0},i),this.ctx.fillStyle=i,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"drawStarGradient",value:function(){var e,n=this.width/2,t=this.width/2,o=this.width/2,r=this.baseHue+this.randRange(-.1,.1),a=.6;e=this.randRange(.03,.07);var i=this.ctx.createRadialGradient(n,t,0,n,t,o);this.addColorToGradient(0,{h:r,s:a,l:1,a:1},i),this.addColorToGradient(e,{h:r,s:a,l:.9,a:1},i),this.addColorToGradient(2*e,{h:r,s:a,l:.6,a:.9},i),this.addColorToGradient(6*e,{h:r,s:a,l:.4,a:.4},i),this.addColorToGradient(11*e,{h:r,s:a,l:0,a:0},i),this.ctx.fillStyle=i,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"drawBeams",value:function(){var e=this.width/2,n=this.width/2,t=this.width/2,o=this.baseHue+this.randRange(-.05,.05),r=.9;this.randRange(.5,1);var a=this.ctx.createRadialGradient(e,n,0,e,n,t);this.addColorToGradient(0,{h:o,s:1,l:r,a:.1},a),this.addColorToGradient(.15,{h:o,s:1,l:r,a:.025},a),this.addColorToGradient(1,{h:o,s:1,l:r,a:0},a);var i=Math.floor(this.randRange(2,7));i*=2;for(var s=this.randRange(.05,.2),c=2*Math.PI/i,l=0;l<i;++l)for(var f=c*l,u=0;u<5;u++)f+=.02,this.ctx.beginPath(),this.ctx.moveTo(e,n),this.ctx.arc(e,n,t,f,f+s),this.ctx.lineTo(e,n),this.ctx.fillStyle=a,this.ctx.fill();s=this.randRange(.01,.15),a=this.ctx.createRadialGradient(e,n,0,e,n,t),this.addColorToGradient(0,{h:o,s:1,l:r,a:.1},a),this.addColorToGradient(.15,{h:o,s:1,l:r,a:.025},a),this.addColorToGradient(1,{h:o,s:1,l:r,a:0},a);for(var d=this.randRange(.1,Math.PI),v=0;v<i;++v)for(var p=c*v+d,g=0;g<3;g++)p+=.02,this.ctx.beginPath(),this.ctx.moveTo(e,n),this.ctx.arc(e,n,t,p,p+s),this.ctx.lineTo(e,n),this.ctx.fillStyle=a,this.ctx.fill()}},{key:"drawHalo",value:function(){var e=this.width/2,n=this.width/2,t=this.width/2,o=this.baseHue+this.randRange(-.2,.2),r=this.randRange(.1,.25),a=this.randRange(.02,.07),i=this.ctx.createRadialGradient(e,n,0,e,n,t);this.addColorToGradient(r-a,{h:o,s:1,l:.7,a:0},i),this.addColorToGradient(r,{h:o,s:1,l:.7,a:.2},i),this.addColorToGradient(r+a,{h:o,s:1,l:.7,a:0},i),this.ctx.fillStyle=i,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"addColorToGradient",value:function(e,n,t){t.addColorStop(e,this.getRGBAString(n))}},{key:"getRGBAString",value:function(e){var n=(new g.Color).setHSL(e.h,e.s,e.l);return"rgba("+Math.round(255*n.r)+", "+Math.round(255*n.g)+", "+Math.round(255*n.b)+","+e.a+")"}}])&&zt(t.prototype,o),r&&zt(t,r),i}(k);function _t(e){return(_t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function jt(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Ot(e,n){return(Ot=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function kt(e,n){return!n||"object"!==_t(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Dt(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Lt(e){return(Lt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Kt=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Ot(e,n)}(i,e);var n,t,o,r,a=(n=i,function(){var e,t=Lt(n);if(Dt()){var o=Lt(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return kt(this,e)});function i(){var e;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),e=a.call(this);var n=new g.TextureLoader;return e.textureFlare=n.load("assets/textures/flare/lensFlareSun.jpg"),e.textureRing=n.load("assets/textures/flare/lensFlareRing.jpg"),e.textureBlur=n.load("assets/textures/flare/lensFlareBlur.jpg"),e.textureSun=n.load("assets/textures/flare/lensFlare.jpg"),e.params={showTextureMap:!1,sunSize:1500,color:new g.Color(16777215)},e.sunTexture=new Rt,e.lensFlare=null,e.createControls(),e}return t=i,(o=[{key:"createControls",value:function(){var e=this;window.gui.addFolder("Sun").add(this.params,"showTextureMap").onChange((function(n){e.sunTexture&&e.sunTexture.visibleCanvas(n)}))}},{key:"update",value:function(){}},{key:"createLensFlare",value:function(){var e=this.randRange(0,1),n=(new g.Color).setHSL(e,1,1);this.params.sunSize=Math.round(this.randRange(1e3,2500)),this.lensFlare=new g.LensFlare(this.sunTexture.texture,this.params.sunSize,0,g.AdditiveBlending,n),this.lensFlare.add(this.sunTexture.texture,2*this.params.sunSize,.1,g.AdditiveBlending,n,.2);for(var t=this.randRange(1,3),o=0;o<t;++o){var r=this.randRange(100,600),a=this.randRange(-.1,.2),i=this.randomColor(),s=this.randRange(.05,.25);this.lensFlare.add(this.textureSun,r,a,g.AdditiveBlending,i,s)}for(var c=this.randRange(5,10),l=0;l<c;++l){var f=this.randRange(200,500),u=this.randRange(-.1,.2),d=this.randomColor(),v=this.randRange(.1,.23);this.lensFlare.add(this.textureFlare,f,u,g.AdditiveBlending,d,v)}for(var p=this.randRange(5,15),h=0;h<p;++h){var y=this.randRange(5,200),m=this.randRange(.05,.4),x=this.randomColor(),w=this.randRange(.1,.3);this.lensFlare.add(this.textureBlur,y,m,g.AdditiveBlending,x,w)}for(var b=this.randRange(5,25),z=0;z<b;++z){var P=this.randRange(5,200),S=this.randRange(-.05,-.2),C=this.randomColor(),M=this.randRange(.1,.3);this.lensFlare.add(this.textureBlur,P,S,g.AdditiveBlending,C,M)}for(var R=this.randRange(10,30),_=0;_<R;++_){var j=this.randRange(200,400),O=this.randRange(-.1,.3),k=this.randomColor(),D=this.randRange(0,.1);this.lensFlare.add(this.textureRing,j,O,g.AdditiveBlending,k,D)}this.lensFlare.position.set(-2e4,2e4,2e4),this.add(this.lensFlare)}},{key:"randomColor",value:function(){return(new g.Color).setHSL(this.randRange(0,1),this.randRange(0,.9),.5)}},{key:"randRange",value:function(e,n){var t=n-e;return e+Math.random()*t}},{key:"generateTexture",value:function(){this.sunTexture.generateTexture()}},{key:"updateMaterial",value:function(){}},{key:"randomizeColor",value:function(){this.params.color.setHSL(this.randRange(0,1),1,1),this.updateMaterial()}},{key:"render",value:function(){this.remove(this.lensFlare),this.generateTexture(),this.createLensFlare()}}])&&jt(t.prototype,o),r&&jt(t,r),i}(g.Object3D),Nt=t("594y"),Ft=t.n(Nt),Tt=t("zBzJ"),It=t.n(Tt),Gt=t("kvsF"),Et=t.n(Gt),At=t("zg8I"),Bt=t.n(At),qt=t("OUBw"),Ut=t.n(qt),Vt=t("oMeY"),Wt=t.n(Vt);function Ht(e){return(Ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Yt(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Qt(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Zt(e,n){return(Zt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function $t(e,n){return!n||"object"!==Ht(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Xt(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Jt(e){return(Jt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var eo=t("xzPX"),no=t("NbV9"),to=t("Qn61"),oo=t("RWZA"),ro=t("aZBE"),ao=t("UmO4"),io=t("WcgB");g.Object3D;function so(e){return(so="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function co(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function lo(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function fo(e,n,t){return(fo="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,n,t){var o=function(e,n){for(;!Object.prototype.hasOwnProperty.call(e,n)&&null!==(e=go(e)););return e}(e,n);if(o){var r=Object.getOwnPropertyDescriptor(o,n);return r.get?r.get.call(t):r.value}})(e,n,t||e)}function uo(e,n){return(uo=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function vo(e,n){return!n||"object"!==so(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function po(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function go(e){return(go=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}t.d(n,"a",(function(){return ho}));Math.pow(2,6);var ho=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&uo(e,n)}(l,e);var n,t,o,a,s=(n=l,function(){var e,t=go(n);if(po()){var o=go(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return vo(this,e)});function l(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return co(this,l),(e=s.call(this,n)).params={seedString:"Ik Esce",resolution:1024,autoGenerate:!1,autoGenTime:180,bloom:!1},e.autoGenCountCurrent=0,e.autoGenCountMax=60*e.params.autoGenTime,e.initSeed(),e.createControls(),e.setupPostprocessing(),e.nebula=new wt,e.scene.add(e.nebula),e.stars=new $n,e.scene.add(e.stars),e.sun=new Kt,e.scene.add(e.sun),e.planet=new Nn,e.scene.add(e.planet),e.setupControlsUI(),e}return t=l,(o=[{key:"createControls",value:function(){var e=this,n=window.gui.addFolder("General");n.add(this.params,"resolution",[128,256,512,1024,2048]).onChange((function(n){e.regenerate()})),n.add(this.params,"autoGenerate"),n.add(this.params,"autoGenTime",30,300).step(1).onChange((function(n){e.autoGenCountMax=60*e.params.autoGenTime})),n.add(this.params,"seedString").listen().onFinishChange((function(n){e.loadSeedFromTextfield()})),document.addEventListener("keydown",(function(n){32==n.keyCode&&e.randomize()})),window.onpopstate=function(n){e.init()}}},{key:"setupPostprocessing",value:function(){this.renderer.autoClearColor=!0,this.composer=new r.a.Composer(this.renderer),this.bloomPass=new i.a({blurAmount:.1,applyZoomBlur:!0,zoomBlurStrength:3.3}),this.godrayPass=new c.a;var e=window.gui.addFolder("Post Processing");e.add(this.params,"bloom"),e.add(this.bloomPass.params,"blurAmount",0,5),e.add(this.bloomPass.params,"applyZoomBlur"),e.add(this.bloomPass.params,"zoomBlurStrength",0,5)}},{key:"updateQueryString",value:function(e,n,t){t||(t=window.location.href);var o,r=new RegExp("([?&])"+e+"=.*?(&|#|$)(.*)","gi");if(r.test(t))return null!=n?t.replace(r,"$1"+e+"="+n+"$2$3"):(o=t.split("#"),t=o[0].replace(r,"$1$3").replace(/(&|\?)$/,""),void 0!==o[1]&&null!==o[1]&&(t+="#"+o[1]),t);if(null!=n){var a=-1!==t.indexOf("?")?"&":"?";return o=t.split("#"),t=o[0]+a+e+"="+n,void 0!==o[1]&&null!==o[1]&&(t+="#"+o[1]),t}return t}},{key:"getParameterByName",value:function(e,n){n||(n=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var t=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(n);return t?t[2]?decodeURIComponent(t[2].replace(/\+/g," ")):"":null}},{key:"initSeed",value:function(){window.seedString=this.params.seedString,window.rng=f()(this.params.seedString),this.random=new v(this.params.seedString),this.noise=new p(this.random)}},{key:"init",value:function(){fo(go(l.prototype),"init",this).call(this),this.params.seedString=this.getParameterByName("seed"),this.params.seedString?(console.log("Using seed string: "+this.params.seedString),this.regenerate()):(console.log("No seed string - randomizing"),this.randomize())}},{key:"loadSeedFromTextfield",value:function(){var e=this.updateQueryString("seed",this.params.seedString);window.history.pushState({seed:this.params.seedString},this.params.seedString,e),this.regenerate()}},{key:"regenerate",value:function(){this.autoGenCountCurrent=0,this.render()}},{key:"capitalizeFirstLetter",value:function(e){return e.charAt(0).toUpperCase()+e.slice(1)}},{key:"randomize",value:function(){var e=Math.random(),n=0;n=e>.8?1:e>.4?2:3;for(var t="",o=0;o<n;++o)t+=this.capitalizeFirstLetter(d()({min:2,max:8})),o<n-1&&(t+=" ");this.params.seedString=t;var r=this.updateQueryString("seed",this.params.seedString);window.history.pushState({seed:this.params.seedString},this.params.seedString,r),this.autoGenCountCurrent=0,this.render()}},{key:"changeResolution",value:function(){this.stars.resolution=this.params.resolution,this.nebula.resolution=this.params.resolution,this.planet.resolution=this.params.resolution}},{key:"render",value:function(){this.initSeed(),this.updateWorldName(),window.renderQueue.start(),this.changeResolution(),this.nebula.render(),this.stars.render({nebulaMap:this.nebula.nebulaTexture.texture}),this.sun.render(),this.planet.render(),window.renderQueue.finish()}},{key:"setupControlsUI",value:function(){var e=this,n=document.createElement("div");n.setAttribute("id","infoBoxHolder"),document.body.appendChild(n);var t=document.createElement("div");t.setAttribute("id","newPlanetButtonHolder"),t.setAttribute("class","text-center"),t.innerHTML="<button id='newPlanetButton' class='btn btn-primary'>New</button>",n.appendChild(t),document.getElementById("newPlanetButton").addEventListener("click",(function(n){e.randomize()}));var o=document.createElement("div");o.setAttribute("id","infoBox"),o.innerHTML="World<br><div id='planetName'></div><br><div id='instructions'>H - Show/Hide UI<br>SPACEBAR - New Planet</div>",n.appendChild(o);var r=document.createElement("div");r.setAttribute("id","line"),n.appendChild(r),n.appendChild(window.gui.domElement),this.updateWorldName(),window.gui.add(this,"randomize")}},{key:"updateWorldName",value:function(){var e=document.getElementById("planetName");null!=e&&(e.innerHTML=this.params.seedString)}},{key:"update",value:function(){this.nebula.update(),this.stars.update(),this.sun.update(),this.planet.update(),this.params.autoGenerate&&(this.autoGenCountCurrent++,this.autoGenCountCurrent>this.autoGenCountMax&&this.randomize()),this.stars.position.copy(window.camera.position),this.nebula.position.copy(window.camera.position)}},{key:"animate",value:function(){fo(go(l.prototype),"animate",this).call(this),this.update(),this.params.bloom&&(this.composer.reset(),this.composer.render(this.scene,this.camera),this.composer.pass(this.bloomPass),this.composer.pass(this.godrayPass),this.composer.toScreen())}}])&&lo(t.prototype,o),a&&lo(t,a),l}(M)},qRcc:function(e,n){e.exports="#define GLSLIFY 1\nvarying vec3 vNormal;\nvarying vec3 vPosition;\nvarying vec3 cameraVector;\n\nuniform float time;\n\nvoid main() {\n    // gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n\n    // vPosition = normalize(position) * scale;\n    vPosition = position;\n    vNormal = normal;\n    cameraVector = cameraPosition - vPosition;\n\n    // vec3 newPosition = position + normal * amplitude * displacement;\n    vec3 newPosition = position;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n}\n"},uEp1:function(e,n){e.exports="#define GLSLIFY 1\nuniform vec3 viewVector;\nuniform float c;\nuniform float p;\nvarying float intensity;\n\nvoid main()\n{\n    vec3 vNormal = normalize(normalMatrix * normal);\n    vec3 vNormel = normalize(normalMatrix * viewVector);\n    intensity = pow(c - dot(vNormal, vNormel), p);\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"},uPvV:function(e,n,t){(function(e){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var t={isWebGLAvailable:function(){try{var e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(e){return!1}},isWebGL2Available:function(){try{var e=document.createElement("canvas");return!(!window.WebGL2RenderingContext||!e.getContext("webgl2"))}catch(e){return!1}},getWebGLErrorMessage:function(){return this.getErrorMessage(1)},getWebGL2ErrorMessage:function(){return this.getErrorMessage(2)},getErrorMessage:function(e){var n={1:window.WebGLRenderingContext,2:window.WebGL2RenderingContext},t='Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>',o=document.createElement("div");return o.id="webglmessage",o.style.fontFamily="monospace",o.style.fontSize="13px",o.style.fontWeight="normal",o.style.textAlign="center",o.style.background="#fff",o.style.color="#000",o.style.padding="1.5em",o.style.width="400px",o.style.margin="5em auto 0",t=(t=n[e]?t.replace("$0","graphics card"):t.replace("$0","browser")).replace("$1",{1:"WebGL",2:"WebGL 2"}[e]),o.innerHTML=t,o}};"object"===n(e)&&(e.exports=t)}).call(this,t("YuTi")(e))},uxjU:function(e,n){e.exports="#define GLSLIFY 1\nuniform vec3 glowColor;\nvarying float intensity;\n\nvoid main()\n{\n    vec3 glow = glowColor * intensity;\n    gl_FragColor = vec4(glow, 1.0);\n}\n"},xzPX:function(e,n,t){e.exports=t.p+"assets/textures/grass3.jpg"},zBzJ:function(e,n){e.exports='precision highp float;\n\nprecision highp float;\n#define GLSLIFY 1\n\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n{\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nconst vec3 turbulenceVec3 = vec3(10.0, 10.0, 10.0);\n\nfloat turbulence(vec3 p) {\n    float w = 100.0;\n    float t = -.5;\n    for (float f = 1.0; f <= 10.0; f++){\n        float power = pow(2.0, f);\n        t += abs(pnoise(vec3(power * p), turbulenceVec3) / power);\n    }\n    return t;\n}\n\n    \n\nuniform vec3 lightPosition;\nuniform vec4 lightColor;\nuniform float lightIntensity;\nuniform float radius;\nuniform float time;\nuniform float roughness;\nuniform float lacunarity;\nuniform float seed;\n\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vReflect;\nvarying vec3 vPosition;\nvarying vec3 vPosition01;\nvarying vec3 vNewPosition;\nvarying float displacement;\nvarying vec3 lightDirection;\n\nconst float PI = 3.14159265358979323846264;\nconst vec3 noiseVec3 = vec3(PI);\n\nfloat random(vec3 p){\n    return fract(sin(dot(p.xyz, vec3(12.9898, 78.233, 1.23456))) * (5356.5453+ seed*1234.7582));\n}\n\nfloat stripes(float x, float f) {\n    float t = .5 + .5 * sin(f * 2.0 * PI * x);\n    return t * t - .5;\n}\n\nvoid main() {\n    vUv = uv;\n    vec4 mPosition = modelMatrix * vec4(position, 1.0);\n    vec3 nWorld = normalize(mat3(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz) * normal);\n    vReflect = normalize(reflect(normalize(mPosition.xyz - cameraPosition), nWorld));\n    vPosition = position;\n    vNormal = normal;\n\n    displacement = random(normal) * radius * roughness / 6.123;\n    displacement += -turbulence(2.0 * normal) * radius * roughness;\n    displacement += pnoise(lacunarity * position + noiseVec3, noiseVec3) * radius * roughness;\n    lightDirection = normalize(lightPosition - position);\n\n    vNewPosition = position + normal * vec3(displacement);\n    vPosition01 = normalize(vNewPosition)/2.0 + vec3(0.5, 0.5, 0.5);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(vNewPosition, 1.0);\n}\n'},zTiM:function(e,n){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute_1(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute_1(permute_1(ix) + iy);\n  vec4 ixy0 = permute_1(ixy + iz0);\n  vec4 ixy1 = permute_1(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\n// Permutation polynomial: (34x^2 + x) mod 289\nvec3 permute_0(vec3 x) {\n  return mod((34.0 * x + 1.0) * x, 289.0);\n}\n\nvec3 dist(vec3 x, vec3 y, vec3 z,  bool manhattanDistance) {\n  return manhattanDistance ?  abs(x) + abs(y) + abs(z) :  (x * x + y * y + z * z);\n}\n\nvec2 worley(vec3 P, float jitter, bool manhattanDistance) {\nfloat K = 0.142857142857; // 1/7\nfloat Ko = 0.428571428571; // 1/2-K/2\nfloat  K2 = 0.020408163265306; // 1/(7*7)\nfloat Kz = 0.166666666667; // 1/6\nfloat Kzo = 0.416666666667; // 1/2-1/6*2\n\n\tvec3 Pi = mod(floor(P), 289.0);\n \tvec3 Pf = fract(P) - 0.5;\n\n\tvec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\n\n\tvec3 p = permute_0(Pi.x + vec3(-1.0, 0.0, 1.0));\n\tvec3 p1 = permute_0(p + Pi.y - 1.0);\n\tvec3 p2 = permute_0(p + Pi.y);\n\tvec3 p3 = permute_0(p + Pi.y + 1.0);\n\n\tvec3 p11 = permute_0(p1 + Pi.z - 1.0);\n\tvec3 p12 = permute_0(p1 + Pi.z);\n\tvec3 p13 = permute_0(p1 + Pi.z + 1.0);\n\n\tvec3 p21 = permute_0(p2 + Pi.z - 1.0);\n\tvec3 p22 = permute_0(p2 + Pi.z);\n\tvec3 p23 = permute_0(p2 + Pi.z + 1.0);\n\n\tvec3 p31 = permute_0(p3 + Pi.z - 1.0);\n\tvec3 p32 = permute_0(p3 + Pi.z);\n\tvec3 p33 = permute_0(p3 + Pi.z + 1.0);\n\n\tvec3 ox11 = fract(p11*K) - Ko;\n\tvec3 oy11 = mod(floor(p11*K), 7.0)*K - Ko;\n\tvec3 oz11 = floor(p11*K2)*Kz - Kzo; // p11 < 289 guaranteed\n\n\tvec3 ox12 = fract(p12*K) - Ko;\n\tvec3 oy12 = mod(floor(p12*K), 7.0)*K - Ko;\n\tvec3 oz12 = floor(p12*K2)*Kz - Kzo;\n\n\tvec3 ox13 = fract(p13*K) - Ko;\n\tvec3 oy13 = mod(floor(p13*K), 7.0)*K - Ko;\n\tvec3 oz13 = floor(p13*K2)*Kz - Kzo;\n\n\tvec3 ox21 = fract(p21*K) - Ko;\n\tvec3 oy21 = mod(floor(p21*K), 7.0)*K - Ko;\n\tvec3 oz21 = floor(p21*K2)*Kz - Kzo;\n\n\tvec3 ox22 = fract(p22*K) - Ko;\n\tvec3 oy22 = mod(floor(p22*K), 7.0)*K - Ko;\n\tvec3 oz22 = floor(p22*K2)*Kz - Kzo;\n\n\tvec3 ox23 = fract(p23*K) - Ko;\n\tvec3 oy23 = mod(floor(p23*K), 7.0)*K - Ko;\n\tvec3 oz23 = floor(p23*K2)*Kz - Kzo;\n\n\tvec3 ox31 = fract(p31*K) - Ko;\n\tvec3 oy31 = mod(floor(p31*K), 7.0)*K - Ko;\n\tvec3 oz31 = floor(p31*K2)*Kz - Kzo;\n\n\tvec3 ox32 = fract(p32*K) - Ko;\n\tvec3 oy32 = mod(floor(p32*K), 7.0)*K - Ko;\n\tvec3 oz32 = floor(p32*K2)*Kz - Kzo;\n\n\tvec3 ox33 = fract(p33*K) - Ko;\n\tvec3 oy33 = mod(floor(p33*K), 7.0)*K - Ko;\n\tvec3 oz33 = floor(p33*K2)*Kz - Kzo;\n\n\tvec3 dx11 = Pfx + jitter*ox11;\n\tvec3 dy11 = Pfy.x + jitter*oy11;\n\tvec3 dz11 = Pfz.x + jitter*oz11;\n\n\tvec3 dx12 = Pfx + jitter*ox12;\n\tvec3 dy12 = Pfy.x + jitter*oy12;\n\tvec3 dz12 = Pfz.y + jitter*oz12;\n\n\tvec3 dx13 = Pfx + jitter*ox13;\n\tvec3 dy13 = Pfy.x + jitter*oy13;\n\tvec3 dz13 = Pfz.z + jitter*oz13;\n\n\tvec3 dx21 = Pfx + jitter*ox21;\n\tvec3 dy21 = Pfy.y + jitter*oy21;\n\tvec3 dz21 = Pfz.x + jitter*oz21;\n\n\tvec3 dx22 = Pfx + jitter*ox22;\n\tvec3 dy22 = Pfy.y + jitter*oy22;\n\tvec3 dz22 = Pfz.y + jitter*oz22;\n\n\tvec3 dx23 = Pfx + jitter*ox23;\n\tvec3 dy23 = Pfy.y + jitter*oy23;\n\tvec3 dz23 = Pfz.z + jitter*oz23;\n\n\tvec3 dx31 = Pfx + jitter*ox31;\n\tvec3 dy31 = Pfy.z + jitter*oy31;\n\tvec3 dz31 = Pfz.x + jitter*oz31;\n\n\tvec3 dx32 = Pfx + jitter*ox32;\n\tvec3 dy32 = Pfy.z + jitter*oy32;\n\tvec3 dz32 = Pfz.y + jitter*oz32;\n\n\tvec3 dx33 = Pfx + jitter*ox33;\n\tvec3 dy33 = Pfy.z + jitter*oy33;\n\tvec3 dz33 = Pfz.z + jitter*oz33;\n\n\tvec3 d11 = dist(dx11, dy11, dz11, manhattanDistance);\n\tvec3 d12 =dist(dx12, dy12, dz12, manhattanDistance);\n\tvec3 d13 = dist(dx13, dy13, dz13, manhattanDistance);\n\tvec3 d21 = dist(dx21, dy21, dz21, manhattanDistance);\n\tvec3 d22 = dist(dx22, dy22, dz22, manhattanDistance);\n\tvec3 d23 = dist(dx23, dy23, dz23, manhattanDistance);\n\tvec3 d31 = dist(dx31, dy31, dz31, manhattanDistance);\n\tvec3 d32 = dist(dx32, dy32, dz32, manhattanDistance);\n\tvec3 d33 = dist(dx33, dy33, dz33, manhattanDistance);\n\n\tvec3 d1a = min(d11, d12);\n\td12 = max(d11, d12);\n\td11 = min(d1a, d13); // Smallest now not in d12 or d13\n\td13 = max(d1a, d13);\n\td12 = min(d12, d13); // 2nd smallest now not in d13\n\tvec3 d2a = min(d21, d22);\n\td22 = max(d21, d22);\n\td21 = min(d2a, d23); // Smallest now not in d22 or d23\n\td23 = max(d2a, d23);\n\td22 = min(d22, d23); // 2nd smallest now not in d23\n\tvec3 d3a = min(d31, d32);\n\td32 = max(d31, d32);\n\td31 = min(d3a, d33); // Smallest now not in d32 or d33\n\td33 = max(d3a, d33);\n\td32 = min(d32, d33); // 2nd smallest now not in d33\n\tvec3 da = min(d11, d21);\n\td21 = max(d11, d21);\n\td11 = min(da, d31); // Smallest now in d11\n\td31 = max(da, d31); // 2nd smallest now not in d31\n\td11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;\n\td11.xz = (d11.x < d11.z) ? d11.xz : d11.zx; // d11.x now smallest\n\td12 = min(d12, d21); // 2nd smallest now not in d21\n\td12 = min(d12, d22); // nor in d22\n\td12 = min(d12, d31); // nor in d31\n\td12 = min(d12, d32); // nor in d32\n\td11.yz = min(d11.yz,d12.xy); // nor in d12.yz\n\td11.y = min(d11.y,d12.z); // Only two more to go\n\td11.y = min(d11.y,d11.z); // Done! (Phew!)\n\treturn sqrt(d11.xy); // F1, F2\n\n}\n\nvarying vec2 vUv;\nuniform int index;\nuniform float seed;\nuniform float resolution;\nuniform float res1;\nuniform float res2;\nuniform float resMix;\nuniform float mixScale;\nuniform sampler2D nebulaMap;\n\nvec3 getSphericalCoord(int index, float x, float y, float width) {\n    width /= 2.0;\n    x -= width;\n    y -= width;\n    vec3 coord = vec3(0.0, 0.0, 0.0);\n\n    if (index == 0) { coord.x=width; coord.y=-y; coord.z=-x; }\n    else if (index == 1) { coord.x=-width; coord.y=-y; coord.z=x; }\n    else if (index == 2) { coord.x=x; coord.y=width; coord.z=y; }\n    else if (index == 3) { coord.x=x; coord.y=-width; coord.z=-y; }\n    else if (index == 4) { coord.x=x; coord.y=-y; coord.z=width; }\n    else if (index == 5) { coord.x=-x; coord.y=-y; coord.z=-width; }\n\n    return normalize(coord);\n}\n\nfloat simplex(vec3 pos, float seed) {\n    float n = cnoise(vec3(pos + seed));\n    // return (n + 1.0) * 0.5;\n    n = (n + 1.0) * 0.5;\n    // n = 2.0 * (0.5 - abs(0.5 - n));\n    return n;\n}\n\nfloat baseNoise(vec3 pos, float frq, float seed) {\n    const int octaves = 16;\n    float amp = 0.5;\n\n    float n = 0.0;\n    float gain = 1.0;\n    for (int i=0; i<octaves; ++i) {\n        n +=  simplex(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n        gain *= 2.0;\n    }\n\n    // increase contrast\n    n = ((n - 0.5) * 3.0) + 0.6;\n    return n;\n}\n\nvoid main() {\n    float x = vUv.x;\n    float y = 1.0 - vUv.y;\n    vec3 sphericalCoord = getSphericalCoord(index, x*resolution, y*resolution, resolution);\n\n    // create base stars\n    vec2 F = worley((sphericalCoord * 200.0) + vec3(seed), 1.0, true);\n    float F1 = F.x;\n    float F2 = F.y;\n\n    float n = F1;\n    n = 1.0 - n;\n    n *= 1.2;\n    n = pow(n, 4.0);\n\n    float sub1 = baseNoise(sphericalCoord, 0.003, seed+32.284);\n    n *= sub1;\n    vec3 starsColor = vec3(n);\n\n//    float n = 0.0;\n//    float res = 200.0;\n//    float mag = 0.7;\n//    for (int i=0; i<4; ++i) {\n//        vec2 F = worley3D((sphericalCoord * res) + vec3(seed), 1.0, true);\n//        float F1 = F.x;\n//        float F2 = F.y;\n//        n += pow(F1, 1.0) * mag;\n//       res *= 3.0;\n//       mag *= 0.5;\n//     }\n//     n = 1.0-n;\n//     n = pow(n, 3.0);\n//     vec3 starsColor = vec3(n);\n\n    gl_FragColor = vec4(starsColor, 1.0);\n}\n'},zg8I:function(e,n){e.exports="precision highp float;\n#define GLSLIFY 1\n\nconst float PI = 3.14159265359;\n\nuniform float time;\nuniform vec4 lightColor;\nuniform float lightIntensity;\nuniform vec3 baseColor;\nuniform float resolution;\nuniform float rangeFactor;\nuniform float smoothness;\nuniform float seed;\n\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nvarying vec3 lightDirection;\n\nint mod(int x, int m) {\n    return int(mod(float(x), float(m)));\n}\n\nfloat random5(vec3 co) {\n    return fract(sin(dot(co.xyz, vec3(12.9898, 78.233, 1.23456))) * (5356.5453+ seed*1234.7582));\n}\n\nfloat random4(float x, float y, float z) {\n    return random5(vec3(x, y, z));\n}\n\nfloat random4(int x, int y, int z) {\n    return random4(float(x), float(y), float(z));\n}\n\nfloat interpolation(float a, float b, float x) {\n    float ft = x * PI;\n    float f = (1.0 - cos(ft)) * 0.5;\n    return a*(1.0-f) + b*f;\n}\n\nfloat tricosine(vec3 coordFloat) {\n    vec3 coord0 = vec3(floor(coordFloat.x), floor(coordFloat.y), floor(coordFloat.z));\n    vec3 coord1 = vec3(coord0.x+1.0, coord0.y+1.0, coord0.z+1.0);\n    float xd = (coordFloat.x - coord0.x)/max(1.0, (coord1.x - coord0.x));\n    float yd = (coordFloat.y - coord0.y)/max(1.0, (coord1.y - coord0.y));\n    float zd = (coordFloat.z - coord0.z)/max(1.0, (coord1.z - coord0.z));\n    float c00 = interpolation(random4(coord0.x, coord0.y, coord0.z), random4(coord1.x, coord0.y, coord0.z), xd);\n    float c10 = interpolation(random4(coord0.x, coord1.y, coord0.z), random4(coord1.x, coord1.y, coord0.z), xd);\n    float c01 = interpolation(random4(coord0.x, coord0.y, coord1.z), random4(coord1.x, coord0.y, coord1.z), xd);\n    float c11 = interpolation(random4(coord0.x, coord1.y, coord1.z), random4(coord1.x, coord1.y, coord1.z), xd);\n    float c0 = interpolation(c00, c10, yd);\n    float c1 = interpolation(c01, c11, yd);\n    float c = interpolation(c0, c1, zd);\n\n    return c;\n}\n\nfloat nearestNeighbour(vec3 coordFloat) {\n    return random4(int(floor(coordFloat.x)), int(floor(coordFloat.y)), int(floor(coordFloat.z)));\n}\n\nfloat helper(float x, float y, float z, float resolution, vec3 offset) {\n    x = offset.x + (x+1.0)/2.0*resolution;\n    y = offset.y + (y+1.0)/2.0*resolution;\n    z = offset.z + (z+1.0)/2.0*resolution;\n\n    vec3 coordFloat = vec3(x, y, z);\n    float interpolated = tricosine(coordFloat);\n    //float interpolated = nearestNeighbour(coordFloat);\n    return interpolated;\n}\n\nvec3 scalarField(float x, float y, float z, float smoothness) {\n    float c = 0.0;\n    float amp = 0.56;\n    float speed = 3.0;\n    for (int l = 6; l > 0; l--) {\n        float res = resolution/pow(2.0, float(l));\n        float level = helper(x, y, z, res, vec3(sin(time*speed)*5.0, cos(time*speed)*5.0, time*speed));\n        c += level*amp;\n        amp/=smoothness;\n    }\n    if (c > 0.0) c *= 1.15;\n\n    c = clamp(c, 0.0, 1.0);\n\n    return vec3(c, c, c);\n}\n\nconst float threshold = 0.75;\n\nvoid main() {\n    vec3 np = normalize(vPosition);\n    vec3 grad = scalarField(np.x, np.y, np.z, smoothness);\n    vec3 col = vec3(baseColor) +  (grad-0.5)/rangeFactor;\n    vec4 color = vec4(col, 1.0);\n\n    float a = max(0.1, dot(vNormal, lightDirection))*lightIntensity/2.0;\n\n    vec4 finalColor = lightColor * color * a;\n    float densityFactor = 1.2;// this value should be > 1.0\n    float alpha = (color.r-threshold)/(1.0-threshold)*densityFactor;\n    gl_FragColor = vec4(finalColor.rgb, alpha);\n}\n"}},[["e6Wu",1,2]]]);